-- Automatically generated by SQLQueryTestSuite
-- Number of queries: 38


-- !query 0
CREATE TABLE test_missing_target (a int, b int, c string, d string) using parquet
-- !query 0 schema
struct<>
-- !query 0 output



-- !query 1
INSERT INTO test_missing_target VALUES (0, 1, 'XXXX', 'A')
-- !query 1 schema
struct<>
-- !query 1 output



-- !query 2
INSERT INTO test_missing_target VALUES (1, 2, 'ABAB', 'b')
-- !query 2 schema
struct<>
-- !query 2 output



-- !query 3
INSERT INTO test_missing_target VALUES (2, 2, 'ABAB', 'c')
-- !query 3 schema
struct<>
-- !query 3 output



-- !query 4
INSERT INTO test_missing_target VALUES (3, 3, 'BBBB', 'D')
-- !query 4 schema
struct<>
-- !query 4 output



-- !query 5
INSERT INTO test_missing_target VALUES (4, 3, 'BBBB', 'e')
-- !query 5 schema
struct<>
-- !query 5 output



-- !query 6
INSERT INTO test_missing_target VALUES (5, 3, 'bbbb', 'F')
-- !query 6 schema
struct<>
-- !query 6 output



-- !query 7
INSERT INTO test_missing_target VALUES (6, 4, 'cccc', 'g')
-- !query 7 schema
struct<>
-- !query 7 output



-- !query 8
INSERT INTO test_missing_target VALUES (7, 4, 'cccc', 'h')
-- !query 8 schema
struct<>
-- !query 8 output



-- !query 9
INSERT INTO test_missing_target VALUES (8, 4, 'CCCC', 'I')
-- !query 9 schema
struct<>
-- !query 9 output



-- !query 10
INSERT INTO test_missing_target VALUES (9, 4, 'CCCC', 'j')
-- !query 10 schema
struct<>
-- !query 10 output



-- !query 11
SELECT udf(c), udf(count(*)) FROM test_missing_target GROUP BY
udf(test_missing_target.c)
ORDER BY udf(c)
-- !query 11 schema
struct<CAST(udf(cast(c as string)) AS STRING):string,CAST(udf(cast(count(1) as string)) AS BIGINT):bigint>
-- !query 11 output
ABAB	2
BBBB	2
CCCC	2
XXXX	1
bbbb	1
cccc	2


-- !query 12
SELECT udf(count(*)) FROM test_missing_target GROUP BY udf(test_missing_target.c)
ORDER BY udf(c)
-- !query 12 schema
struct<CAST(udf(cast(count(1) as string)) AS BIGINT):bigint>
-- !query 12 output
2
2
2
1
1
2


-- !query 13
SELECT udf(count(*)) FROM test_missing_target GROUP BY udf(a) ORDER BY udf(b)
-- !query 13 schema
struct<>
-- !query 13 output
org.apache.spark.sql.AnalysisException
cannot resolve '`b`' given input columns: [CAST(udf(cast(count(1) as string)) AS BIGINT)]; line 1 pos 75


-- !query 14
SELECT udf(count(*)) FROM test_missing_target GROUP BY udf(b) ORDER BY udf(b)
-- !query 14 schema
struct<CAST(udf(cast(count(1) as string)) AS BIGINT):bigint>
-- !query 14 output
1
2
3
4


-- !query 15
SELECT udf(test_missing_target.b), udf(count(*))
  FROM test_missing_target GROUP BY udf(b) ORDER BY udf(b)
-- !query 15 schema
struct<CAST(udf(cast(b as string)) AS INT):int,CAST(udf(cast(count(1) as string)) AS BIGINT):bigint>
-- !query 15 output
1	1
2	2
3	3
4	4


-- !query 16
SELECT udf(c) FROM test_missing_target ORDER BY udf(a)
-- !query 16 schema
struct<CAST(udf(cast(c as string)) AS STRING):string>
-- !query 16 output
XXXX
ABAB
ABAB
BBBB
BBBB
bbbb
cccc
cccc
CCCC
CCCC


-- !query 17
SELECT udf(count(*)) FROM test_missing_target GROUP BY udf(b) ORDER BY udf(b) desc
-- !query 17 schema
struct<CAST(udf(cast(count(1) as string)) AS BIGINT):bigint>
-- !query 17 output
4
3
2
1


-- !query 18
SELECT udf(count(*)) FROM test_missing_target ORDER BY udf(1) desc
-- !query 18 schema
struct<CAST(udf(cast(count(1) as string)) AS BIGINT):bigint>
-- !query 18 output
10


-- !query 19
SELECT udf(c), udf(count(*)) FROM test_missing_target GROUP BY 1 ORDER BY 1
-- !query 19 schema
struct<CAST(udf(cast(c as string)) AS STRING):string,CAST(udf(cast(count(1) as string)) AS BIGINT):bigint>
-- !query 19 output
ABAB	2
BBBB	2
CCCC	2
XXXX	1
bbbb	1
cccc	2


-- !query 20
SELECT udf(c), udf(count(*)) FROM test_missing_target GROUP BY 3
-- !query 20 schema
struct<>
-- !query 20 output
org.apache.spark.sql.AnalysisException
GROUP BY position 3 is not in select list (valid range is [1, 2]); line 1 pos 63


-- !query 21
SELECT udf(count(*)) FROM test_missing_target x, test_missing_target y
	WHERE udf(x.a) = udf(y.a)
	GROUP BY udf(b) ORDER BY udf(b)
-- !query 21 schema
struct<>
-- !query 21 output
org.apache.spark.sql.AnalysisException
Reference 'b' is ambiguous, could be: x.b, y.b.; line 3 pos 14


-- !query 22
SELECT udf(a), udf(a) FROM test_missing_target
	ORDER BY udf(a)
-- !query 22 schema
struct<CAST(udf(cast(a as string)) AS INT):int,CAST(udf(cast(a as string)) AS INT):int>
-- !query 22 output
0	0
1	1
2	2
3	3
4	4
5	5
6	6
7	7
8	8
9	9


-- !query 23
SELECT udf(udf(a)/2), udf(udf(a)/2) FROM test_missing_target
	ORDER BY udf(udf(a)/2)
-- !query 23 schema
struct<CAST(udf(cast((cast(udf(cast(a as string)) as int) div 2) as string)) AS INT):int,CAST(udf(cast((cast(udf(cast(a as string)) as int) div 2) as string)) AS INT):int>
-- !query 23 output
0	0
0	0
1	1
1	1
2	2
2	2
3	3
3	3
4	4
4	4


-- !query 24
SELECT udf(a/2), udf(a/2) FROM test_missing_target
	GROUP BY udf(a/2) ORDER BY udf(a/2)
-- !query 24 schema
struct<CAST(udf(cast((a div 2) as string)) AS INT):int,CAST(udf(cast((a div 2) as string)) AS INT):int>
-- !query 24 output
0	0
1	1
2	2
3	3
4	4


-- !query 25
SELECT udf(x.b), udf(count(*)) FROM test_missing_target x, test_missing_target y
	WHERE udf(x.a) = udf(y.a)
	GROUP BY udf(x.b) ORDER BY udf(x.b)
-- !query 25 schema
struct<CAST(udf(cast(b as string)) AS INT):int,CAST(udf(cast(count(1) as string)) AS BIGINT):bigint>
-- !query 25 output
1	1
2	2
3	3
4	4


-- !query 26
SELECT udf(count(*)) FROM test_missing_target x, test_missing_target y
	WHERE udf(x.a) = udf(y.a)
	GROUP BY udf(x.b) ORDER BY udf(x.b)
-- !query 26 schema
struct<CAST(udf(cast(count(1) as string)) AS BIGINT):bigint>
-- !query 26 output
1
2
3
4


-- !query 27
SELECT udf(a%2), udf(count(udf(b))) FROM test_missing_target
GROUP BY udf(test_missing_target.a%2)
ORDER BY udf(test_missing_target.a%2)
-- !query 27 schema
struct<CAST(udf(cast((a % 2) as string)) AS INT):int,CAST(udf(cast(count(cast(udf(cast(b as string)) as int)) as string)) AS BIGINT):bigint>
-- !query 27 output
0	5
1	5


-- !query 28
SELECT udf(count(c)) FROM test_missing_target
GROUP BY udf(lower(test_missing_target.c))
ORDER BY udf(lower(test_missing_target.c))
-- !query 28 schema
struct<CAST(udf(cast(count(c) as string)) AS BIGINT):bigint>
-- !query 28 output
2
3
4
1


-- !query 29
SELECT udf(count(udf(a))) FROM test_missing_target GROUP BY udf(a) ORDER BY udf(b)
-- !query 29 schema
struct<>
-- !query 29 output
org.apache.spark.sql.AnalysisException
cannot resolve '`b`' given input columns: [CAST(udf(cast(count(cast(udf(cast(a as string)) as int)) as string)) AS BIGINT)]; line 1 pos 80


-- !query 30
SELECT udf(count(b)) FROM test_missing_target GROUP BY udf(b/2) ORDER BY udf(b/2)
-- !query 30 schema
struct<CAST(udf(cast(count(b) as string)) AS BIGINT):bigint>
-- !query 30 output
1
5
4


-- !query 31
SELECT udf(lower(test_missing_target.c)), udf(count(udf(c)))
  FROM test_missing_target GROUP BY udf(lower(c)) ORDER BY udf(lower(c))
-- !query 31 schema
struct<CAST(udf(cast(lower(c) as string)) AS STRING):string,CAST(udf(cast(count(cast(udf(cast(c as string)) as string)) as string)) AS BIGINT):bigint>
-- !query 31 output
abab	2
bbbb	3
cccc	4
xxxx	1


-- !query 32
SELECT udf(a) FROM test_missing_target ORDER BY udf(upper(udf(d)))
-- !query 32 schema
struct<CAST(udf(cast(a as string)) AS INT):int>
-- !query 32 output
0
1
2
3
4
5
6
7
8
9


-- !query 33
SELECT udf(count(b)) FROM test_missing_target
	GROUP BY udf((b + 1) / 2) ORDER BY udf((b + 1) / 2) desc
-- !query 33 schema
struct<CAST(udf(cast(count(b) as string)) AS BIGINT):bigint>
-- !query 33 output
7
3


-- !query 34
SELECT udf(count(udf(x.a))) FROM test_missing_target x, test_missing_target y
	WHERE udf(x.a) = udf(y.a)
	GROUP BY udf(b/2) ORDER BY udf(b/2)
-- !query 34 schema
struct<>
-- !query 34 output
org.apache.spark.sql.AnalysisException
Reference 'b' is ambiguous, could be: x.b, y.b.; line 3 pos 14


-- !query 35
SELECT udf(x.b/2), udf(count(udf(x.b))) FROM test_missing_target x,
test_missing_target y
	WHERE udf(x.a) = udf(y.a)
	GROUP BY udf(x.b/2) ORDER BY udf(x.b/2)
-- !query 35 schema
struct<CAST(udf(cast((b div 2) as string)) AS INT):int,CAST(udf(cast(count(cast(udf(cast(b as string)) as int)) as string)) AS BIGINT):bigint>
-- !query 35 output
0	1
1	5
2	4


-- !query 36
SELECT udf(count(udf(b))) FROM test_missing_target x, test_missing_target y
	WHERE udf(x.a) = udf(y.a)
	GROUP BY udf(x.b/2)
-- !query 36 schema
struct<>
-- !query 36 output
org.apache.spark.sql.AnalysisException
Reference 'b' is ambiguous, could be: x.b, y.b.; line 1 pos 21


-- !query 37
DROP TABLE test_missing_target
-- !query 37 schema
struct<>
-- !query 37 output

