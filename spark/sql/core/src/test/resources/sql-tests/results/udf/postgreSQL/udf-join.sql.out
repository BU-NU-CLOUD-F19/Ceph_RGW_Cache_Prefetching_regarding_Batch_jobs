-- Automatically generated by SQLQueryTestSuite
-- Number of queries: 185


-- !query 0
CREATE OR REPLACE TEMPORARY VIEW INT4_TBL AS SELECT * FROM
  (VALUES (0), (123456), (-123456), (2147483647), (-2147483647))
  AS v(f1)
-- !query 0 schema
struct<>
-- !query 0 output



-- !query 1
CREATE OR REPLACE TEMPORARY VIEW INT8_TBL AS SELECT * FROM
  (VALUES
    (123, 456),
    (123, 4567890123456789),
    (4567890123456789, 123),
    (4567890123456789, 4567890123456789),
    (4567890123456789, -4567890123456789))
  AS v(q1, q2)
-- !query 1 schema
struct<>
-- !query 1 output



-- !query 2
CREATE OR REPLACE TEMPORARY VIEW FLOAT8_TBL AS SELECT * FROM
  (VALUES (0.0), (1004.30), (-34.84),
    (cast('1.2345678901234e+200' as double)), (cast('1.2345678901234e-200' as double)))
  AS v(f1)
-- !query 2 schema
struct<>
-- !query 2 output



-- !query 3
CREATE OR REPLACE TEMPORARY VIEW TEXT_TBL AS SELECT * FROM
  (VALUES ('doh!'), ('hi de ho neighbor'))
  AS v(f1)
-- !query 3 schema
struct<>
-- !query 3 output



-- !query 4
CREATE OR REPLACE TEMPORARY VIEW tenk2 AS SELECT * FROM tenk1
-- !query 4 schema
struct<>
-- !query 4 output



-- !query 5
CREATE TABLE J1_TBL (
  i integer,
  j integer,
  t string
) USING parquet
-- !query 5 schema
struct<>
-- !query 5 output



-- !query 6
CREATE TABLE J2_TBL (
  i integer,
  k integer
) USING parquet
-- !query 6 schema
struct<>
-- !query 6 output



-- !query 7
INSERT INTO J1_TBL VALUES (1, 4, 'one')
-- !query 7 schema
struct<>
-- !query 7 output



-- !query 8
INSERT INTO J1_TBL VALUES (2, 3, 'two')
-- !query 8 schema
struct<>
-- !query 8 output



-- !query 9
INSERT INTO J1_TBL VALUES (3, 2, 'three')
-- !query 9 schema
struct<>
-- !query 9 output



-- !query 10
INSERT INTO J1_TBL VALUES (4, 1, 'four')
-- !query 10 schema
struct<>
-- !query 10 output



-- !query 11
INSERT INTO J1_TBL VALUES (5, 0, 'five')
-- !query 11 schema
struct<>
-- !query 11 output



-- !query 12
INSERT INTO J1_TBL VALUES (6, 6, 'six')
-- !query 12 schema
struct<>
-- !query 12 output



-- !query 13
INSERT INTO J1_TBL VALUES (7, 7, 'seven')
-- !query 13 schema
struct<>
-- !query 13 output



-- !query 14
INSERT INTO J1_TBL VALUES (8, 8, 'eight')
-- !query 14 schema
struct<>
-- !query 14 output



-- !query 15
INSERT INTO J1_TBL VALUES (0, NULL, 'zero')
-- !query 15 schema
struct<>
-- !query 15 output



-- !query 16
INSERT INTO J1_TBL VALUES (NULL, NULL, 'null')
-- !query 16 schema
struct<>
-- !query 16 output



-- !query 17
INSERT INTO J1_TBL VALUES (NULL, 0, 'zero')
-- !query 17 schema
struct<>
-- !query 17 output



-- !query 18
INSERT INTO J2_TBL VALUES (1, -1)
-- !query 18 schema
struct<>
-- !query 18 output



-- !query 19
INSERT INTO J2_TBL VALUES (2, 2)
-- !query 19 schema
struct<>
-- !query 19 output



-- !query 20
INSERT INTO J2_TBL VALUES (3, -3)
-- !query 20 schema
struct<>
-- !query 20 output



-- !query 21
INSERT INTO J2_TBL VALUES (2, 4)
-- !query 21 schema
struct<>
-- !query 21 output



-- !query 22
INSERT INTO J2_TBL VALUES (5, -5)
-- !query 22 schema
struct<>
-- !query 22 output



-- !query 23
INSERT INTO J2_TBL VALUES (5, -5)
-- !query 23 schema
struct<>
-- !query 23 output



-- !query 24
INSERT INTO J2_TBL VALUES (0, NULL)
-- !query 24 schema
struct<>
-- !query 24 output



-- !query 25
INSERT INTO J2_TBL VALUES (NULL, NULL)
-- !query 25 schema
struct<>
-- !query 25 output



-- !query 26
INSERT INTO J2_TBL VALUES (NULL, 0)
-- !query 26 schema
struct<>
-- !query 26 output



-- !query 27
SELECT udf('') AS `xxx`, udf(i), udf(j), udf(t)
  FROM J1_TBL AS tx
-- !query 27 schema
struct<xxx:string,CAST(udf(cast(i as string)) AS INT):int,CAST(udf(cast(j as string)) AS INT):int,CAST(udf(cast(t as string)) AS STRING):string>
-- !query 27 output
	0	NULL	zero
	1	4	one
	2	3	two
	3	2	three
	4	1	four
	5	0	five
	6	6	six
	7	7	seven
	8	8	eight
	NULL	0	zero
	NULL	NULL	null


-- !query 28
SELECT udf(udf('')) AS `xxx`, udf(udf(i)), udf(j), udf(t)
  FROM J1_TBL tx
-- !query 28 schema
struct<xxx:string,CAST(udf(cast(cast(udf(cast(i as string)) as int) as string)) AS INT):int,CAST(udf(cast(j as string)) AS INT):int,CAST(udf(cast(t as string)) AS STRING):string>
-- !query 28 output
	0	NULL	zero
	1	4	one
	2	3	two
	3	2	three
	4	1	four
	5	0	five
	6	6	six
	7	7	seven
	8	8	eight
	NULL	0	zero
	NULL	NULL	null


-- !query 29
SELECT udf('') AS `xxx`, a, udf(udf(b)), c
  FROM J1_TBL AS t1 (a, b, c)
-- !query 29 schema
struct<xxx:string,a:int,CAST(udf(cast(cast(udf(cast(b as string)) as int) as string)) AS INT):int,c:string>
-- !query 29 output
	0	NULL	zero
	1	4	one
	2	3	two
	3	2	three
	4	1	four
	5	0	five
	6	6	six
	7	7	seven
	8	8	eight
	NULL	0	zero
	NULL	NULL	null


-- !query 30
SELECT udf('') AS `xxx`, udf(a), udf(b), udf(udf(c))
  FROM J1_TBL t1 (a, b, c)
-- !query 30 schema
struct<xxx:string,CAST(udf(cast(a as string)) AS INT):int,CAST(udf(cast(b as string)) AS INT):int,CAST(udf(cast(cast(udf(cast(c as string)) as string) as string)) AS STRING):string>
-- !query 30 output
	0	NULL	zero
	1	4	one
	2	3	two
	3	2	three
	4	1	four
	5	0	five
	6	6	six
	7	7	seven
	8	8	eight
	NULL	0	zero
	NULL	NULL	null


-- !query 31
SELECT udf('') AS `xxx`, udf(a), b, udf(c), udf(d), e
  FROM J1_TBL t1 (a, b, c), J2_TBL t2 (d, e)
-- !query 31 schema
struct<xxx:string,CAST(udf(cast(a as string)) AS INT):int,b:int,CAST(udf(cast(c as string)) AS STRING):string,CAST(udf(cast(d as string)) AS INT):int,e:int>
-- !query 31 output
	0	NULL	zero	0	NULL
	0	NULL	zero	1	-1
	0	NULL	zero	2	2
	0	NULL	zero	2	4
	0	NULL	zero	3	-3
	0	NULL	zero	5	-5
	0	NULL	zero	5	-5
	0	NULL	zero	NULL	0
	0	NULL	zero	NULL	NULL
	1	4	one	0	NULL
	1	4	one	1	-1
	1	4	one	2	2
	1	4	one	2	4
	1	4	one	3	-3
	1	4	one	5	-5
	1	4	one	5	-5
	1	4	one	NULL	0
	1	4	one	NULL	NULL
	2	3	two	0	NULL
	2	3	two	1	-1
	2	3	two	2	2
	2	3	two	2	4
	2	3	two	3	-3
	2	3	two	5	-5
	2	3	two	5	-5
	2	3	two	NULL	0
	2	3	two	NULL	NULL
	3	2	three	0	NULL
	3	2	three	1	-1
	3	2	three	2	2
	3	2	three	2	4
	3	2	three	3	-3
	3	2	three	5	-5
	3	2	three	5	-5
	3	2	three	NULL	0
	3	2	three	NULL	NULL
	4	1	four	0	NULL
	4	1	four	1	-1
	4	1	four	2	2
	4	1	four	2	4
	4	1	four	3	-3
	4	1	four	5	-5
	4	1	four	5	-5
	4	1	four	NULL	0
	4	1	four	NULL	NULL
	5	0	five	0	NULL
	5	0	five	1	-1
	5	0	five	2	2
	5	0	five	2	4
	5	0	five	3	-3
	5	0	five	5	-5
	5	0	five	5	-5
	5	0	five	NULL	0
	5	0	five	NULL	NULL
	6	6	six	0	NULL
	6	6	six	1	-1
	6	6	six	2	2
	6	6	six	2	4
	6	6	six	3	-3
	6	6	six	5	-5
	6	6	six	5	-5
	6	6	six	NULL	0
	6	6	six	NULL	NULL
	7	7	seven	0	NULL
	7	7	seven	1	-1
	7	7	seven	2	2
	7	7	seven	2	4
	7	7	seven	3	-3
	7	7	seven	5	-5
	7	7	seven	5	-5
	7	7	seven	NULL	0
	7	7	seven	NULL	NULL
	8	8	eight	0	NULL
	8	8	eight	1	-1
	8	8	eight	2	2
	8	8	eight	2	4
	8	8	eight	3	-3
	8	8	eight	5	-5
	8	8	eight	5	-5
	8	8	eight	NULL	0
	8	8	eight	NULL	NULL
	NULL	0	zero	0	NULL
	NULL	0	zero	1	-1
	NULL	0	zero	2	2
	NULL	0	zero	2	4
	NULL	0	zero	3	-3
	NULL	0	zero	5	-5
	NULL	0	zero	5	-5
	NULL	0	zero	NULL	0
	NULL	0	zero	NULL	NULL
	NULL	NULL	null	0	NULL
	NULL	NULL	null	1	-1
	NULL	NULL	null	2	2
	NULL	NULL	null	2	4
	NULL	NULL	null	3	-3
	NULL	NULL	null	5	-5
	NULL	NULL	null	5	-5
	NULL	NULL	null	NULL	0
	NULL	NULL	null	NULL	NULL


-- !query 32
SELECT udf('') AS `xxx`, *
  FROM J1_TBL CROSS JOIN J2_TBL
-- !query 32 schema
struct<xxx:string,i:int,j:int,t:string,i:int,k:int>
-- !query 32 output
	0	NULL	zero	0	NULL
	0	NULL	zero	1	-1
	0	NULL	zero	2	2
	0	NULL	zero	2	4
	0	NULL	zero	3	-3
	0	NULL	zero	5	-5
	0	NULL	zero	5	-5
	0	NULL	zero	NULL	0
	0	NULL	zero	NULL	NULL
	1	4	one	0	NULL
	1	4	one	1	-1
	1	4	one	2	2
	1	4	one	2	4
	1	4	one	3	-3
	1	4	one	5	-5
	1	4	one	5	-5
	1	4	one	NULL	0
	1	4	one	NULL	NULL
	2	3	two	0	NULL
	2	3	two	1	-1
	2	3	two	2	2
	2	3	two	2	4
	2	3	two	3	-3
	2	3	two	5	-5
	2	3	two	5	-5
	2	3	two	NULL	0
	2	3	two	NULL	NULL
	3	2	three	0	NULL
	3	2	three	1	-1
	3	2	three	2	2
	3	2	three	2	4
	3	2	three	3	-3
	3	2	three	5	-5
	3	2	three	5	-5
	3	2	three	NULL	0
	3	2	three	NULL	NULL
	4	1	four	0	NULL
	4	1	four	1	-1
	4	1	four	2	2
	4	1	four	2	4
	4	1	four	3	-3
	4	1	four	5	-5
	4	1	four	5	-5
	4	1	four	NULL	0
	4	1	four	NULL	NULL
	5	0	five	0	NULL
	5	0	five	1	-1
	5	0	five	2	2
	5	0	five	2	4
	5	0	five	3	-3
	5	0	five	5	-5
	5	0	five	5	-5
	5	0	five	NULL	0
	5	0	five	NULL	NULL
	6	6	six	0	NULL
	6	6	six	1	-1
	6	6	six	2	2
	6	6	six	2	4
	6	6	six	3	-3
	6	6	six	5	-5
	6	6	six	5	-5
	6	6	six	NULL	0
	6	6	six	NULL	NULL
	7	7	seven	0	NULL
	7	7	seven	1	-1
	7	7	seven	2	2
	7	7	seven	2	4
	7	7	seven	3	-3
	7	7	seven	5	-5
	7	7	seven	5	-5
	7	7	seven	NULL	0
	7	7	seven	NULL	NULL
	8	8	eight	0	NULL
	8	8	eight	1	-1
	8	8	eight	2	2
	8	8	eight	2	4
	8	8	eight	3	-3
	8	8	eight	5	-5
	8	8	eight	5	-5
	8	8	eight	NULL	0
	8	8	eight	NULL	NULL
	NULL	0	zero	0	NULL
	NULL	0	zero	1	-1
	NULL	0	zero	2	2
	NULL	0	zero	2	4
	NULL	0	zero	3	-3
	NULL	0	zero	5	-5
	NULL	0	zero	5	-5
	NULL	0	zero	NULL	0
	NULL	0	zero	NULL	NULL
	NULL	NULL	null	0	NULL
	NULL	NULL	null	1	-1
	NULL	NULL	null	2	2
	NULL	NULL	null	2	4
	NULL	NULL	null	3	-3
	NULL	NULL	null	5	-5
	NULL	NULL	null	5	-5
	NULL	NULL	null	NULL	0
	NULL	NULL	null	NULL	NULL


-- !query 33
SELECT udf('') AS `xxx`, udf(i) AS i, udf(k), udf(t) AS t
  FROM J1_TBL CROSS JOIN J2_TBL
-- !query 33 schema
struct<>
-- !query 33 output
org.apache.spark.sql.AnalysisException
Reference 'i' is ambiguous, could be: default.j1_tbl.i, default.j2_tbl.i.; line 1 pos 29


-- !query 34
SELECT udf('') AS `xxx`, udf(t1.i) AS i, udf(k), udf(t)
  FROM J1_TBL t1 CROSS JOIN J2_TBL t2
-- !query 34 schema
struct<xxx:string,i:int,CAST(udf(cast(k as string)) AS INT):int,CAST(udf(cast(t as string)) AS STRING):string>
-- !query 34 output
	0	-1	zero
	0	-3	zero
	0	-5	zero
	0	-5	zero
	0	0	zero
	0	2	zero
	0	4	zero
	0	NULL	zero
	0	NULL	zero
	1	-1	one
	1	-3	one
	1	-5	one
	1	-5	one
	1	0	one
	1	2	one
	1	4	one
	1	NULL	one
	1	NULL	one
	2	-1	two
	2	-3	two
	2	-5	two
	2	-5	two
	2	0	two
	2	2	two
	2	4	two
	2	NULL	two
	2	NULL	two
	3	-1	three
	3	-3	three
	3	-5	three
	3	-5	three
	3	0	three
	3	2	three
	3	4	three
	3	NULL	three
	3	NULL	three
	4	-1	four
	4	-3	four
	4	-5	four
	4	-5	four
	4	0	four
	4	2	four
	4	4	four
	4	NULL	four
	4	NULL	four
	5	-1	five
	5	-3	five
	5	-5	five
	5	-5	five
	5	0	five
	5	2	five
	5	4	five
	5	NULL	five
	5	NULL	five
	6	-1	six
	6	-3	six
	6	-5	six
	6	-5	six
	6	0	six
	6	2	six
	6	4	six
	6	NULL	six
	6	NULL	six
	7	-1	seven
	7	-3	seven
	7	-5	seven
	7	-5	seven
	7	0	seven
	7	2	seven
	7	4	seven
	7	NULL	seven
	7	NULL	seven
	8	-1	eight
	8	-3	eight
	8	-5	eight
	8	-5	eight
	8	0	eight
	8	2	eight
	8	4	eight
	8	NULL	eight
	8	NULL	eight
	NULL	-1	null
	NULL	-1	zero
	NULL	-3	null
	NULL	-3	zero
	NULL	-5	null
	NULL	-5	null
	NULL	-5	zero
	NULL	-5	zero
	NULL	0	null
	NULL	0	zero
	NULL	2	null
	NULL	2	zero
	NULL	4	null
	NULL	4	zero
	NULL	NULL	null
	NULL	NULL	null
	NULL	NULL	zero
	NULL	NULL	zero


-- !query 35
SELECT udf(udf('')) AS `xxx`, udf(udf(ii)) AS ii, udf(udf(tt)) AS tt, udf(udf(kk))
  FROM (J1_TBL CROSS JOIN J2_TBL)
    AS tx (ii, jj, tt, ii2, kk)
-- !query 35 schema
struct<xxx:string,ii:int,tt:string,CAST(udf(cast(cast(udf(cast(kk as string)) as int) as string)) AS INT):int>
-- !query 35 output
	0	zero	-1
	0	zero	-3
	0	zero	-5
	0	zero	-5
	0	zero	0
	0	zero	2
	0	zero	4
	0	zero	NULL
	0	zero	NULL
	1	one	-1
	1	one	-3
	1	one	-5
	1	one	-5
	1	one	0
	1	one	2
	1	one	4
	1	one	NULL
	1	one	NULL
	2	two	-1
	2	two	-3
	2	two	-5
	2	two	-5
	2	two	0
	2	two	2
	2	two	4
	2	two	NULL
	2	two	NULL
	3	three	-1
	3	three	-3
	3	three	-5
	3	three	-5
	3	three	0
	3	three	2
	3	three	4
	3	three	NULL
	3	three	NULL
	4	four	-1
	4	four	-3
	4	four	-5
	4	four	-5
	4	four	0
	4	four	2
	4	four	4
	4	four	NULL
	4	four	NULL
	5	five	-1
	5	five	-3
	5	five	-5
	5	five	-5
	5	five	0
	5	five	2
	5	five	4
	5	five	NULL
	5	five	NULL
	6	six	-1
	6	six	-3
	6	six	-5
	6	six	-5
	6	six	0
	6	six	2
	6	six	4
	6	six	NULL
	6	six	NULL
	7	seven	-1
	7	seven	-3
	7	seven	-5
	7	seven	-5
	7	seven	0
	7	seven	2
	7	seven	4
	7	seven	NULL
	7	seven	NULL
	8	eight	-1
	8	eight	-3
	8	eight	-5
	8	eight	-5
	8	eight	0
	8	eight	2
	8	eight	4
	8	eight	NULL
	8	eight	NULL
	NULL	null	-1
	NULL	null	-3
	NULL	null	-5
	NULL	null	-5
	NULL	null	0
	NULL	null	2
	NULL	null	4
	NULL	null	NULL
	NULL	null	NULL
	NULL	zero	-1
	NULL	zero	-3
	NULL	zero	-5
	NULL	zero	-5
	NULL	zero	0
	NULL	zero	2
	NULL	zero	4
	NULL	zero	NULL
	NULL	zero	NULL


-- !query 36
SELECT udf('') AS `xxx`, udf(udf(j1_tbl.i)), udf(j), udf(t), udf(a.i), udf(a.k), udf(b.i),  udf(b.k)
  FROM J1_TBL CROSS JOIN J2_TBL a CROSS JOIN J2_TBL b
-- !query 36 schema
struct<xxx:string,CAST(udf(cast(cast(udf(cast(i as string)) as int) as string)) AS INT):int,CAST(udf(cast(j as string)) AS INT):int,CAST(udf(cast(t as string)) AS STRING):string,CAST(udf(cast(i as string)) AS INT):int,CAST(udf(cast(k as string)) AS INT):int,CAST(udf(cast(i as string)) AS INT):int,CAST(udf(cast(k as string)) AS INT):int>
-- !query 36 output
	0	NULL	zero	0	NULL	0	NULL
	0	NULL	zero	0	NULL	1	-1
	0	NULL	zero	0	NULL	2	2
	0	NULL	zero	0	NULL	2	4
	0	NULL	zero	0	NULL	3	-3
	0	NULL	zero	0	NULL	5	-5
	0	NULL	zero	0	NULL	5	-5
	0	NULL	zero	0	NULL	NULL	0
	0	NULL	zero	0	NULL	NULL	NULL
	0	NULL	zero	1	-1	0	NULL
	0	NULL	zero	1	-1	1	-1
	0	NULL	zero	1	-1	2	2
	0	NULL	zero	1	-1	2	4
	0	NULL	zero	1	-1	3	-3
	0	NULL	zero	1	-1	5	-5
	0	NULL	zero	1	-1	5	-5
	0	NULL	zero	1	-1	NULL	0
	0	NULL	zero	1	-1	NULL	NULL
	0	NULL	zero	2	2	0	NULL
	0	NULL	zero	2	2	1	-1
	0	NULL	zero	2	2	2	2
	0	NULL	zero	2	2	2	4
	0	NULL	zero	2	2	3	-3
	0	NULL	zero	2	2	5	-5
	0	NULL	zero	2	2	5	-5
	0	NULL	zero	2	2	NULL	0
	0	NULL	zero	2	2	NULL	NULL
	0	NULL	zero	2	4	0	NULL
	0	NULL	zero	2	4	1	-1
	0	NULL	zero	2	4	2	2
	0	NULL	zero	2	4	2	4
	0	NULL	zero	2	4	3	-3
	0	NULL	zero	2	4	5	-5
	0	NULL	zero	2	4	5	-5
	0	NULL	zero	2	4	NULL	0
	0	NULL	zero	2	4	NULL	NULL
	0	NULL	zero	3	-3	0	NULL
	0	NULL	zero	3	-3	1	-1
	0	NULL	zero	3	-3	2	2
	0	NULL	zero	3	-3	2	4
	0	NULL	zero	3	-3	3	-3
	0	NULL	zero	3	-3	5	-5
	0	NULL	zero	3	-3	5	-5
	0	NULL	zero	3	-3	NULL	0
	0	NULL	zero	3	-3	NULL	NULL
	0	NULL	zero	5	-5	0	NULL
	0	NULL	zero	5	-5	0	NULL
	0	NULL	zero	5	-5	1	-1
	0	NULL	zero	5	-5	1	-1
	0	NULL	zero	5	-5	2	2
	0	NULL	zero	5	-5	2	2
	0	NULL	zero	5	-5	2	4
	0	NULL	zero	5	-5	2	4
	0	NULL	zero	5	-5	3	-3
	0	NULL	zero	5	-5	3	-3
	0	NULL	zero	5	-5	5	-5
	0	NULL	zero	5	-5	5	-5
	0	NULL	zero	5	-5	5	-5
	0	NULL	zero	5	-5	5	-5
	0	NULL	zero	5	-5	NULL	0
	0	NULL	zero	5	-5	NULL	0
	0	NULL	zero	5	-5	NULL	NULL
	0	NULL	zero	5	-5	NULL	NULL
	0	NULL	zero	NULL	0	0	NULL
	0	NULL	zero	NULL	0	1	-1
	0	NULL	zero	NULL	0	2	2
	0	NULL	zero	NULL	0	2	4
	0	NULL	zero	NULL	0	3	-3
	0	NULL	zero	NULL	0	5	-5
	0	NULL	zero	NULL	0	5	-5
	0	NULL	zero	NULL	0	NULL	0
	0	NULL	zero	NULL	0	NULL	NULL
	0	NULL	zero	NULL	NULL	0	NULL
	0	NULL	zero	NULL	NULL	1	-1
	0	NULL	zero	NULL	NULL	2	2
	0	NULL	zero	NULL	NULL	2	4
	0	NULL	zero	NULL	NULL	3	-3
	0	NULL	zero	NULL	NULL	5	-5
	0	NULL	zero	NULL	NULL	5	-5
	0	NULL	zero	NULL	NULL	NULL	0
	0	NULL	zero	NULL	NULL	NULL	NULL
	1	4	one	0	NULL	0	NULL
	1	4	one	0	NULL	1	-1
	1	4	one	0	NULL	2	2
	1	4	one	0	NULL	2	4
	1	4	one	0	NULL	3	-3
	1	4	one	0	NULL	5	-5
	1	4	one	0	NULL	5	-5
	1	4	one	0	NULL	NULL	0
	1	4	one	0	NULL	NULL	NULL
	1	4	one	1	-1	0	NULL
	1	4	one	1	-1	1	-1
	1	4	one	1	-1	2	2
	1	4	one	1	-1	2	4
	1	4	one	1	-1	3	-3
	1	4	one	1	-1	5	-5
	1	4	one	1	-1	5	-5
	1	4	one	1	-1	NULL	0
	1	4	one	1	-1	NULL	NULL
	1	4	one	2	2	0	NULL
	1	4	one	2	2	1	-1
	1	4	one	2	2	2	2
	1	4	one	2	2	2	4
	1	4	one	2	2	3	-3
	1	4	one	2	2	5	-5
	1	4	one	2	2	5	-5
	1	4	one	2	2	NULL	0
	1	4	one	2	2	NULL	NULL
	1	4	one	2	4	0	NULL
	1	4	one	2	4	1	-1
	1	4	one	2	4	2	2
	1	4	one	2	4	2	4
	1	4	one	2	4	3	-3
	1	4	one	2	4	5	-5
	1	4	one	2	4	5	-5
	1	4	one	2	4	NULL	0
	1	4	one	2	4	NULL	NULL
	1	4	one	3	-3	0	NULL
	1	4	one	3	-3	1	-1
	1	4	one	3	-3	2	2
	1	4	one	3	-3	2	4
	1	4	one	3	-3	3	-3
	1	4	one	3	-3	5	-5
	1	4	one	3	-3	5	-5
	1	4	one	3	-3	NULL	0
	1	4	one	3	-3	NULL	NULL
	1	4	one	5	-5	0	NULL
	1	4	one	5	-5	0	NULL
	1	4	one	5	-5	1	-1
	1	4	one	5	-5	1	-1
	1	4	one	5	-5	2	2
	1	4	one	5	-5	2	2
	1	4	one	5	-5	2	4
	1	4	one	5	-5	2	4
	1	4	one	5	-5	3	-3
	1	4	one	5	-5	3	-3
	1	4	one	5	-5	5	-5
	1	4	one	5	-5	5	-5
	1	4	one	5	-5	5	-5
	1	4	one	5	-5	5	-5
	1	4	one	5	-5	NULL	0
	1	4	one	5	-5	NULL	0
	1	4	one	5	-5	NULL	NULL
	1	4	one	5	-5	NULL	NULL
	1	4	one	NULL	0	0	NULL
	1	4	one	NULL	0	1	-1
	1	4	one	NULL	0	2	2
	1	4	one	NULL	0	2	4
	1	4	one	NULL	0	3	-3
	1	4	one	NULL	0	5	-5
	1	4	one	NULL	0	5	-5
	1	4	one	NULL	0	NULL	0
	1	4	one	NULL	0	NULL	NULL
	1	4	one	NULL	NULL	0	NULL
	1	4	one	NULL	NULL	1	-1
	1	4	one	NULL	NULL	2	2
	1	4	one	NULL	NULL	2	4
	1	4	one	NULL	NULL	3	-3
	1	4	one	NULL	NULL	5	-5
	1	4	one	NULL	NULL	5	-5
	1	4	one	NULL	NULL	NULL	0
	1	4	one	NULL	NULL	NULL	NULL
	2	3	two	0	NULL	0	NULL
	2	3	two	0	NULL	1	-1
	2	3	two	0	NULL	2	2
	2	3	two	0	NULL	2	4
	2	3	two	0	NULL	3	-3
	2	3	two	0	NULL	5	-5
	2	3	two	0	NULL	5	-5
	2	3	two	0	NULL	NULL	0
	2	3	two	0	NULL	NULL	NULL
	2	3	two	1	-1	0	NULL
	2	3	two	1	-1	1	-1
	2	3	two	1	-1	2	2
	2	3	two	1	-1	2	4
	2	3	two	1	-1	3	-3
	2	3	two	1	-1	5	-5
	2	3	two	1	-1	5	-5
	2	3	two	1	-1	NULL	0
	2	3	two	1	-1	NULL	NULL
	2	3	two	2	2	0	NULL
	2	3	two	2	2	1	-1
	2	3	two	2	2	2	2
	2	3	two	2	2	2	4
	2	3	two	2	2	3	-3
	2	3	two	2	2	5	-5
	2	3	two	2	2	5	-5
	2	3	two	2	2	NULL	0
	2	3	two	2	2	NULL	NULL
	2	3	two	2	4	0	NULL
	2	3	two	2	4	1	-1
	2	3	two	2	4	2	2
	2	3	two	2	4	2	4
	2	3	two	2	4	3	-3
	2	3	two	2	4	5	-5
	2	3	two	2	4	5	-5
	2	3	two	2	4	NULL	0
	2	3	two	2	4	NULL	NULL
	2	3	two	3	-3	0	NULL
	2	3	two	3	-3	1	-1
	2	3	two	3	-3	2	2
	2	3	two	3	-3	2	4
	2	3	two	3	-3	3	-3
	2	3	two	3	-3	5	-5
	2	3	two	3	-3	5	-5
	2	3	two	3	-3	NULL	0
	2	3	two	3	-3	NULL	NULL
	2	3	two	5	-5	0	NULL
	2	3	two	5	-5	0	NULL
	2	3	two	5	-5	1	-1
	2	3	two	5	-5	1	-1
	2	3	two	5	-5	2	2
	2	3	two	5	-5	2	2
	2	3	two	5	-5	2	4
	2	3	two	5	-5	2	4
	2	3	two	5	-5	3	-3
	2	3	two	5	-5	3	-3
	2	3	two	5	-5	5	-5
	2	3	two	5	-5	5	-5
	2	3	two	5	-5	5	-5
	2	3	two	5	-5	5	-5
	2	3	two	5	-5	NULL	0
	2	3	two	5	-5	NULL	0
	2	3	two	5	-5	NULL	NULL
	2	3	two	5	-5	NULL	NULL
	2	3	two	NULL	0	0	NULL
	2	3	two	NULL	0	1	-1
	2	3	two	NULL	0	2	2
	2	3	two	NULL	0	2	4
	2	3	two	NULL	0	3	-3
	2	3	two	NULL	0	5	-5
	2	3	two	NULL	0	5	-5
	2	3	two	NULL	0	NULL	0
	2	3	two	NULL	0	NULL	NULL
	2	3	two	NULL	NULL	0	NULL
	2	3	two	NULL	NULL	1	-1
	2	3	two	NULL	NULL	2	2
	2	3	two	NULL	NULL	2	4
	2	3	two	NULL	NULL	3	-3
	2	3	two	NULL	NULL	5	-5
	2	3	two	NULL	NULL	5	-5
	2	3	two	NULL	NULL	NULL	0
	2	3	two	NULL	NULL	NULL	NULL
	3	2	three	0	NULL	0	NULL
	3	2	three	0	NULL	1	-1
	3	2	three	0	NULL	2	2
	3	2	three	0	NULL	2	4
	3	2	three	0	NULL	3	-3
	3	2	three	0	NULL	5	-5
	3	2	three	0	NULL	5	-5
	3	2	three	0	NULL	NULL	0
	3	2	three	0	NULL	NULL	NULL
	3	2	three	1	-1	0	NULL
	3	2	three	1	-1	1	-1
	3	2	three	1	-1	2	2
	3	2	three	1	-1	2	4
	3	2	three	1	-1	3	-3
	3	2	three	1	-1	5	-5
	3	2	three	1	-1	5	-5
	3	2	three	1	-1	NULL	0
	3	2	three	1	-1	NULL	NULL
	3	2	three	2	2	0	NULL
	3	2	three	2	2	1	-1
	3	2	three	2	2	2	2
	3	2	three	2	2	2	4
	3	2	three	2	2	3	-3
	3	2	three	2	2	5	-5
	3	2	three	2	2	5	-5
	3	2	three	2	2	NULL	0
	3	2	three	2	2	NULL	NULL
	3	2	three	2	4	0	NULL
	3	2	three	2	4	1	-1
	3	2	three	2	4	2	2
	3	2	three	2	4	2	4
	3	2	three	2	4	3	-3
	3	2	three	2	4	5	-5
	3	2	three	2	4	5	-5
	3	2	three	2	4	NULL	0
	3	2	three	2	4	NULL	NULL
	3	2	three	3	-3	0	NULL
	3	2	three	3	-3	1	-1
	3	2	three	3	-3	2	2
	3	2	three	3	-3	2	4
	3	2	three	3	-3	3	-3
	3	2	three	3	-3	5	-5
	3	2	three	3	-3	5	-5
	3	2	three	3	-3	NULL	0
	3	2	three	3	-3	NULL	NULL
	3	2	three	5	-5	0	NULL
	3	2	three	5	-5	0	NULL
	3	2	three	5	-5	1	-1
	3	2	three	5	-5	1	-1
	3	2	three	5	-5	2	2
	3	2	three	5	-5	2	2
	3	2	three	5	-5	2	4
	3	2	three	5	-5	2	4
	3	2	three	5	-5	3	-3
	3	2	three	5	-5	3	-3
	3	2	three	5	-5	5	-5
	3	2	three	5	-5	5	-5
	3	2	three	5	-5	5	-5
	3	2	three	5	-5	5	-5
	3	2	three	5	-5	NULL	0
	3	2	three	5	-5	NULL	0
	3	2	three	5	-5	NULL	NULL
	3	2	three	5	-5	NULL	NULL
	3	2	three	NULL	0	0	NULL
	3	2	three	NULL	0	1	-1
	3	2	three	NULL	0	2	2
	3	2	three	NULL	0	2	4
	3	2	three	NULL	0	3	-3
	3	2	three	NULL	0	5	-5
	3	2	three	NULL	0	5	-5
	3	2	three	NULL	0	NULL	0
	3	2	three	NULL	0	NULL	NULL
	3	2	three	NULL	NULL	0	NULL
	3	2	three	NULL	NULL	1	-1
	3	2	three	NULL	NULL	2	2
	3	2	three	NULL	NULL	2	4
	3	2	three	NULL	NULL	3	-3
	3	2	three	NULL	NULL	5	-5
	3	2	three	NULL	NULL	5	-5
	3	2	three	NULL	NULL	NULL	0
	3	2	three	NULL	NULL	NULL	NULL
	4	1	four	0	NULL	0	NULL
	4	1	four	0	NULL	1	-1
	4	1	four	0	NULL	2	2
	4	1	four	0	NULL	2	4
	4	1	four	0	NULL	3	-3
	4	1	four	0	NULL	5	-5
	4	1	four	0	NULL	5	-5
	4	1	four	0	NULL	NULL	0
	4	1	four	0	NULL	NULL	NULL
	4	1	four	1	-1	0	NULL
	4	1	four	1	-1	1	-1
	4	1	four	1	-1	2	2
	4	1	four	1	-1	2	4
	4	1	four	1	-1	3	-3
	4	1	four	1	-1	5	-5
	4	1	four	1	-1	5	-5
	4	1	four	1	-1	NULL	0
	4	1	four	1	-1	NULL	NULL
	4	1	four	2	2	0	NULL
	4	1	four	2	2	1	-1
	4	1	four	2	2	2	2
	4	1	four	2	2	2	4
	4	1	four	2	2	3	-3
	4	1	four	2	2	5	-5
	4	1	four	2	2	5	-5
	4	1	four	2	2	NULL	0
	4	1	four	2	2	NULL	NULL
	4	1	four	2	4	0	NULL
	4	1	four	2	4	1	-1
	4	1	four	2	4	2	2
	4	1	four	2	4	2	4
	4	1	four	2	4	3	-3
	4	1	four	2	4	5	-5
	4	1	four	2	4	5	-5
	4	1	four	2	4	NULL	0
	4	1	four	2	4	NULL	NULL
	4	1	four	3	-3	0	NULL
	4	1	four	3	-3	1	-1
	4	1	four	3	-3	2	2
	4	1	four	3	-3	2	4
	4	1	four	3	-3	3	-3
	4	1	four	3	-3	5	-5
	4	1	four	3	-3	5	-5
	4	1	four	3	-3	NULL	0
	4	1	four	3	-3	NULL	NULL
	4	1	four	5	-5	0	NULL
	4	1	four	5	-5	0	NULL
	4	1	four	5	-5	1	-1
	4	1	four	5	-5	1	-1
	4	1	four	5	-5	2	2
	4	1	four	5	-5	2	2
	4	1	four	5	-5	2	4
	4	1	four	5	-5	2	4
	4	1	four	5	-5	3	-3
	4	1	four	5	-5	3	-3
	4	1	four	5	-5	5	-5
	4	1	four	5	-5	5	-5
	4	1	four	5	-5	5	-5
	4	1	four	5	-5	5	-5
	4	1	four	5	-5	NULL	0
	4	1	four	5	-5	NULL	0
	4	1	four	5	-5	NULL	NULL
	4	1	four	5	-5	NULL	NULL
	4	1	four	NULL	0	0	NULL
	4	1	four	NULL	0	1	-1
	4	1	four	NULL	0	2	2
	4	1	four	NULL	0	2	4
	4	1	four	NULL	0	3	-3
	4	1	four	NULL	0	5	-5
	4	1	four	NULL	0	5	-5
	4	1	four	NULL	0	NULL	0
	4	1	four	NULL	0	NULL	NULL
	4	1	four	NULL	NULL	0	NULL
	4	1	four	NULL	NULL	1	-1
	4	1	four	NULL	NULL	2	2
	4	1	four	NULL	NULL	2	4
	4	1	four	NULL	NULL	3	-3
	4	1	four	NULL	NULL	5	-5
	4	1	four	NULL	NULL	5	-5
	4	1	four	NULL	NULL	NULL	0
	4	1	four	NULL	NULL	NULL	NULL
	5	0	five	0	NULL	0	NULL
	5	0	five	0	NULL	1	-1
	5	0	five	0	NULL	2	2
	5	0	five	0	NULL	2	4
	5	0	five	0	NULL	3	-3
	5	0	five	0	NULL	5	-5
	5	0	five	0	NULL	5	-5
	5	0	five	0	NULL	NULL	0
	5	0	five	0	NULL	NULL	NULL
	5	0	five	1	-1	0	NULL
	5	0	five	1	-1	1	-1
	5	0	five	1	-1	2	2
	5	0	five	1	-1	2	4
	5	0	five	1	-1	3	-3
	5	0	five	1	-1	5	-5
	5	0	five	1	-1	5	-5
	5	0	five	1	-1	NULL	0
	5	0	five	1	-1	NULL	NULL
	5	0	five	2	2	0	NULL
	5	0	five	2	2	1	-1
	5	0	five	2	2	2	2
	5	0	five	2	2	2	4
	5	0	five	2	2	3	-3
	5	0	five	2	2	5	-5
	5	0	five	2	2	5	-5
	5	0	five	2	2	NULL	0
	5	0	five	2	2	NULL	NULL
	5	0	five	2	4	0	NULL
	5	0	five	2	4	1	-1
	5	0	five	2	4	2	2
	5	0	five	2	4	2	4
	5	0	five	2	4	3	-3
	5	0	five	2	4	5	-5
	5	0	five	2	4	5	-5
	5	0	five	2	4	NULL	0
	5	0	five	2	4	NULL	NULL
	5	0	five	3	-3	0	NULL
	5	0	five	3	-3	1	-1
	5	0	five	3	-3	2	2
	5	0	five	3	-3	2	4
	5	0	five	3	-3	3	-3
	5	0	five	3	-3	5	-5
	5	0	five	3	-3	5	-5
	5	0	five	3	-3	NULL	0
	5	0	five	3	-3	NULL	NULL
	5	0	five	5	-5	0	NULL
	5	0	five	5	-5	0	NULL
	5	0	five	5	-5	1	-1
	5	0	five	5	-5	1	-1
	5	0	five	5	-5	2	2
	5	0	five	5	-5	2	2
	5	0	five	5	-5	2	4
	5	0	five	5	-5	2	4
	5	0	five	5	-5	3	-3
	5	0	five	5	-5	3	-3
	5	0	five	5	-5	5	-5
	5	0	five	5	-5	5	-5
	5	0	five	5	-5	5	-5
	5	0	five	5	-5	5	-5
	5	0	five	5	-5	NULL	0
	5	0	five	5	-5	NULL	0
	5	0	five	5	-5	NULL	NULL
	5	0	five	5	-5	NULL	NULL
	5	0	five	NULL	0	0	NULL
	5	0	five	NULL	0	1	-1
	5	0	five	NULL	0	2	2
	5	0	five	NULL	0	2	4
	5	0	five	NULL	0	3	-3
	5	0	five	NULL	0	5	-5
	5	0	five	NULL	0	5	-5
	5	0	five	NULL	0	NULL	0
	5	0	five	NULL	0	NULL	NULL
	5	0	five	NULL	NULL	0	NULL
	5	0	five	NULL	NULL	1	-1
	5	0	five	NULL	NULL	2	2
	5	0	five	NULL	NULL	2	4
	5	0	five	NULL	NULL	3	-3
	5	0	five	NULL	NULL	5	-5
	5	0	five	NULL	NULL	5	-5
	5	0	five	NULL	NULL	NULL	0
	5	0	five	NULL	NULL	NULL	NULL
	6	6	six	0	NULL	0	NULL
	6	6	six	0	NULL	1	-1
	6	6	six	0	NULL	2	2
	6	6	six	0	NULL	2	4
	6	6	six	0	NULL	3	-3
	6	6	six	0	NULL	5	-5
	6	6	six	0	NULL	5	-5
	6	6	six	0	NULL	NULL	0
	6	6	six	0	NULL	NULL	NULL
	6	6	six	1	-1	0	NULL
	6	6	six	1	-1	1	-1
	6	6	six	1	-1	2	2
	6	6	six	1	-1	2	4
	6	6	six	1	-1	3	-3
	6	6	six	1	-1	5	-5
	6	6	six	1	-1	5	-5
	6	6	six	1	-1	NULL	0
	6	6	six	1	-1	NULL	NULL
	6	6	six	2	2	0	NULL
	6	6	six	2	2	1	-1
	6	6	six	2	2	2	2
	6	6	six	2	2	2	4
	6	6	six	2	2	3	-3
	6	6	six	2	2	5	-5
	6	6	six	2	2	5	-5
	6	6	six	2	2	NULL	0
	6	6	six	2	2	NULL	NULL
	6	6	six	2	4	0	NULL
	6	6	six	2	4	1	-1
	6	6	six	2	4	2	2
	6	6	six	2	4	2	4
	6	6	six	2	4	3	-3
	6	6	six	2	4	5	-5
	6	6	six	2	4	5	-5
	6	6	six	2	4	NULL	0
	6	6	six	2	4	NULL	NULL
	6	6	six	3	-3	0	NULL
	6	6	six	3	-3	1	-1
	6	6	six	3	-3	2	2
	6	6	six	3	-3	2	4
	6	6	six	3	-3	3	-3
	6	6	six	3	-3	5	-5
	6	6	six	3	-3	5	-5
	6	6	six	3	-3	NULL	0
	6	6	six	3	-3	NULL	NULL
	6	6	six	5	-5	0	NULL
	6	6	six	5	-5	0	NULL
	6	6	six	5	-5	1	-1
	6	6	six	5	-5	1	-1
	6	6	six	5	-5	2	2
	6	6	six	5	-5	2	2
	6	6	six	5	-5	2	4
	6	6	six	5	-5	2	4
	6	6	six	5	-5	3	-3
	6	6	six	5	-5	3	-3
	6	6	six	5	-5	5	-5
	6	6	six	5	-5	5	-5
	6	6	six	5	-5	5	-5
	6	6	six	5	-5	5	-5
	6	6	six	5	-5	NULL	0
	6	6	six	5	-5	NULL	0
	6	6	six	5	-5	NULL	NULL
	6	6	six	5	-5	NULL	NULL
	6	6	six	NULL	0	0	NULL
	6	6	six	NULL	0	1	-1
	6	6	six	NULL	0	2	2
	6	6	six	NULL	0	2	4
	6	6	six	NULL	0	3	-3
	6	6	six	NULL	0	5	-5
	6	6	six	NULL	0	5	-5
	6	6	six	NULL	0	NULL	0
	6	6	six	NULL	0	NULL	NULL
	6	6	six	NULL	NULL	0	NULL
	6	6	six	NULL	NULL	1	-1
	6	6	six	NULL	NULL	2	2
	6	6	six	NULL	NULL	2	4
	6	6	six	NULL	NULL	3	-3
	6	6	six	NULL	NULL	5	-5
	6	6	six	NULL	NULL	5	-5
	6	6	six	NULL	NULL	NULL	0
	6	6	six	NULL	NULL	NULL	NULL
	7	7	seven	0	NULL	0	NULL
	7	7	seven	0	NULL	1	-1
	7	7	seven	0	NULL	2	2
	7	7	seven	0	NULL	2	4
	7	7	seven	0	NULL	3	-3
	7	7	seven	0	NULL	5	-5
	7	7	seven	0	NULL	5	-5
	7	7	seven	0	NULL	NULL	0
	7	7	seven	0	NULL	NULL	NULL
	7	7	seven	1	-1	0	NULL
	7	7	seven	1	-1	1	-1
	7	7	seven	1	-1	2	2
	7	7	seven	1	-1	2	4
	7	7	seven	1	-1	3	-3
	7	7	seven	1	-1	5	-5
	7	7	seven	1	-1	5	-5
	7	7	seven	1	-1	NULL	0
	7	7	seven	1	-1	NULL	NULL
	7	7	seven	2	2	0	NULL
	7	7	seven	2	2	1	-1
	7	7	seven	2	2	2	2
	7	7	seven	2	2	2	4
	7	7	seven	2	2	3	-3
	7	7	seven	2	2	5	-5
	7	7	seven	2	2	5	-5
	7	7	seven	2	2	NULL	0
	7	7	seven	2	2	NULL	NULL
	7	7	seven	2	4	0	NULL
	7	7	seven	2	4	1	-1
	7	7	seven	2	4	2	2
	7	7	seven	2	4	2	4
	7	7	seven	2	4	3	-3
	7	7	seven	2	4	5	-5
	7	7	seven	2	4	5	-5
	7	7	seven	2	4	NULL	0
	7	7	seven	2	4	NULL	NULL
	7	7	seven	3	-3	0	NULL
	7	7	seven	3	-3	1	-1
	7	7	seven	3	-3	2	2
	7	7	seven	3	-3	2	4
	7	7	seven	3	-3	3	-3
	7	7	seven	3	-3	5	-5
	7	7	seven	3	-3	5	-5
	7	7	seven	3	-3	NULL	0
	7	7	seven	3	-3	NULL	NULL
	7	7	seven	5	-5	0	NULL
	7	7	seven	5	-5	0	NULL
	7	7	seven	5	-5	1	-1
	7	7	seven	5	-5	1	-1
	7	7	seven	5	-5	2	2
	7	7	seven	5	-5	2	2
	7	7	seven	5	-5	2	4
	7	7	seven	5	-5	2	4
	7	7	seven	5	-5	3	-3
	7	7	seven	5	-5	3	-3
	7	7	seven	5	-5	5	-5
	7	7	seven	5	-5	5	-5
	7	7	seven	5	-5	5	-5
	7	7	seven	5	-5	5	-5
	7	7	seven	5	-5	NULL	0
	7	7	seven	5	-5	NULL	0
	7	7	seven	5	-5	NULL	NULL
	7	7	seven	5	-5	NULL	NULL
	7	7	seven	NULL	0	0	NULL
	7	7	seven	NULL	0	1	-1
	7	7	seven	NULL	0	2	2
	7	7	seven	NULL	0	2	4
	7	7	seven	NULL	0	3	-3
	7	7	seven	NULL	0	5	-5
	7	7	seven	NULL	0	5	-5
	7	7	seven	NULL	0	NULL	0
	7	7	seven	NULL	0	NULL	NULL
	7	7	seven	NULL	NULL	0	NULL
	7	7	seven	NULL	NULL	1	-1
	7	7	seven	NULL	NULL	2	2
	7	7	seven	NULL	NULL	2	4
	7	7	seven	NULL	NULL	3	-3
	7	7	seven	NULL	NULL	5	-5
	7	7	seven	NULL	NULL	5	-5
	7	7	seven	NULL	NULL	NULL	0
	7	7	seven	NULL	NULL	NULL	NULL
	8	8	eight	0	NULL	0	NULL
	8	8	eight	0	NULL	1	-1
	8	8	eight	0	NULL	2	2
	8	8	eight	0	NULL	2	4
	8	8	eight	0	NULL	3	-3
	8	8	eight	0	NULL	5	-5
	8	8	eight	0	NULL	5	-5
	8	8	eight	0	NULL	NULL	0
	8	8	eight	0	NULL	NULL	NULL
	8	8	eight	1	-1	0	NULL
	8	8	eight	1	-1	1	-1
	8	8	eight	1	-1	2	2
	8	8	eight	1	-1	2	4
	8	8	eight	1	-1	3	-3
	8	8	eight	1	-1	5	-5
	8	8	eight	1	-1	5	-5
	8	8	eight	1	-1	NULL	0
	8	8	eight	1	-1	NULL	NULL
	8	8	eight	2	2	0	NULL
	8	8	eight	2	2	1	-1
	8	8	eight	2	2	2	2
	8	8	eight	2	2	2	4
	8	8	eight	2	2	3	-3
	8	8	eight	2	2	5	-5
	8	8	eight	2	2	5	-5
	8	8	eight	2	2	NULL	0
	8	8	eight	2	2	NULL	NULL
	8	8	eight	2	4	0	NULL
	8	8	eight	2	4	1	-1
	8	8	eight	2	4	2	2
	8	8	eight	2	4	2	4
	8	8	eight	2	4	3	-3
	8	8	eight	2	4	5	-5
	8	8	eight	2	4	5	-5
	8	8	eight	2	4	NULL	0
	8	8	eight	2	4	NULL	NULL
	8	8	eight	3	-3	0	NULL
	8	8	eight	3	-3	1	-1
	8	8	eight	3	-3	2	2
	8	8	eight	3	-3	2	4
	8	8	eight	3	-3	3	-3
	8	8	eight	3	-3	5	-5
	8	8	eight	3	-3	5	-5
	8	8	eight	3	-3	NULL	0
	8	8	eight	3	-3	NULL	NULL
	8	8	eight	5	-5	0	NULL
	8	8	eight	5	-5	0	NULL
	8	8	eight	5	-5	1	-1
	8	8	eight	5	-5	1	-1
	8	8	eight	5	-5	2	2
	8	8	eight	5	-5	2	2
	8	8	eight	5	-5	2	4
	8	8	eight	5	-5	2	4
	8	8	eight	5	-5	3	-3
	8	8	eight	5	-5	3	-3
	8	8	eight	5	-5	5	-5
	8	8	eight	5	-5	5	-5
	8	8	eight	5	-5	5	-5
	8	8	eight	5	-5	5	-5
	8	8	eight	5	-5	NULL	0
	8	8	eight	5	-5	NULL	0
	8	8	eight	5	-5	NULL	NULL
	8	8	eight	5	-5	NULL	NULL
	8	8	eight	NULL	0	0	NULL
	8	8	eight	NULL	0	1	-1
	8	8	eight	NULL	0	2	2
	8	8	eight	NULL	0	2	4
	8	8	eight	NULL	0	3	-3
	8	8	eight	NULL	0	5	-5
	8	8	eight	NULL	0	5	-5
	8	8	eight	NULL	0	NULL	0
	8	8	eight	NULL	0	NULL	NULL
	8	8	eight	NULL	NULL	0	NULL
	8	8	eight	NULL	NULL	1	-1
	8	8	eight	NULL	NULL	2	2
	8	8	eight	NULL	NULL	2	4
	8	8	eight	NULL	NULL	3	-3
	8	8	eight	NULL	NULL	5	-5
	8	8	eight	NULL	NULL	5	-5
	8	8	eight	NULL	NULL	NULL	0
	8	8	eight	NULL	NULL	NULL	NULL
	NULL	0	zero	0	NULL	0	NULL
	NULL	0	zero	0	NULL	1	-1
	NULL	0	zero	0	NULL	2	2
	NULL	0	zero	0	NULL	2	4
	NULL	0	zero	0	NULL	3	-3
	NULL	0	zero	0	NULL	5	-5
	NULL	0	zero	0	NULL	5	-5
	NULL	0	zero	0	NULL	NULL	0
	NULL	0	zero	0	NULL	NULL	NULL
	NULL	0	zero	1	-1	0	NULL
	NULL	0	zero	1	-1	1	-1
	NULL	0	zero	1	-1	2	2
	NULL	0	zero	1	-1	2	4
	NULL	0	zero	1	-1	3	-3
	NULL	0	zero	1	-1	5	-5
	NULL	0	zero	1	-1	5	-5
	NULL	0	zero	1	-1	NULL	0
	NULL	0	zero	1	-1	NULL	NULL
	NULL	0	zero	2	2	0	NULL
	NULL	0	zero	2	2	1	-1
	NULL	0	zero	2	2	2	2
	NULL	0	zero	2	2	2	4
	NULL	0	zero	2	2	3	-3
	NULL	0	zero	2	2	5	-5
	NULL	0	zero	2	2	5	-5
	NULL	0	zero	2	2	NULL	0
	NULL	0	zero	2	2	NULL	NULL
	NULL	0	zero	2	4	0	NULL
	NULL	0	zero	2	4	1	-1
	NULL	0	zero	2	4	2	2
	NULL	0	zero	2	4	2	4
	NULL	0	zero	2	4	3	-3
	NULL	0	zero	2	4	5	-5
	NULL	0	zero	2	4	5	-5
	NULL	0	zero	2	4	NULL	0
	NULL	0	zero	2	4	NULL	NULL
	NULL	0	zero	3	-3	0	NULL
	NULL	0	zero	3	-3	1	-1
	NULL	0	zero	3	-3	2	2
	NULL	0	zero	3	-3	2	4
	NULL	0	zero	3	-3	3	-3
	NULL	0	zero	3	-3	5	-5
	NULL	0	zero	3	-3	5	-5
	NULL	0	zero	3	-3	NULL	0
	NULL	0	zero	3	-3	NULL	NULL
	NULL	0	zero	5	-5	0	NULL
	NULL	0	zero	5	-5	0	NULL
	NULL	0	zero	5	-5	1	-1
	NULL	0	zero	5	-5	1	-1
	NULL	0	zero	5	-5	2	2
	NULL	0	zero	5	-5	2	2
	NULL	0	zero	5	-5	2	4
	NULL	0	zero	5	-5	2	4
	NULL	0	zero	5	-5	3	-3
	NULL	0	zero	5	-5	3	-3
	NULL	0	zero	5	-5	5	-5
	NULL	0	zero	5	-5	5	-5
	NULL	0	zero	5	-5	5	-5
	NULL	0	zero	5	-5	5	-5
	NULL	0	zero	5	-5	NULL	0
	NULL	0	zero	5	-5	NULL	0
	NULL	0	zero	5	-5	NULL	NULL
	NULL	0	zero	5	-5	NULL	NULL
	NULL	0	zero	NULL	0	0	NULL
	NULL	0	zero	NULL	0	1	-1
	NULL	0	zero	NULL	0	2	2
	NULL	0	zero	NULL	0	2	4
	NULL	0	zero	NULL	0	3	-3
	NULL	0	zero	NULL	0	5	-5
	NULL	0	zero	NULL	0	5	-5
	NULL	0	zero	NULL	0	NULL	0
	NULL	0	zero	NULL	0	NULL	NULL
	NULL	0	zero	NULL	NULL	0	NULL
	NULL	0	zero	NULL	NULL	1	-1
	NULL	0	zero	NULL	NULL	2	2
	NULL	0	zero	NULL	NULL	2	4
	NULL	0	zero	NULL	NULL	3	-3
	NULL	0	zero	NULL	NULL	5	-5
	NULL	0	zero	NULL	NULL	5	-5
	NULL	0	zero	NULL	NULL	NULL	0
	NULL	0	zero	NULL	NULL	NULL	NULL
	NULL	NULL	null	0	NULL	0	NULL
	NULL	NULL	null	0	NULL	1	-1
	NULL	NULL	null	0	NULL	2	2
	NULL	NULL	null	0	NULL	2	4
	NULL	NULL	null	0	NULL	3	-3
	NULL	NULL	null	0	NULL	5	-5
	NULL	NULL	null	0	NULL	5	-5
	NULL	NULL	null	0	NULL	NULL	0
	NULL	NULL	null	0	NULL	NULL	NULL
	NULL	NULL	null	1	-1	0	NULL
	NULL	NULL	null	1	-1	1	-1
	NULL	NULL	null	1	-1	2	2
	NULL	NULL	null	1	-1	2	4
	NULL	NULL	null	1	-1	3	-3
	NULL	NULL	null	1	-1	5	-5
	NULL	NULL	null	1	-1	5	-5
	NULL	NULL	null	1	-1	NULL	0
	NULL	NULL	null	1	-1	NULL	NULL
	NULL	NULL	null	2	2	0	NULL
	NULL	NULL	null	2	2	1	-1
	NULL	NULL	null	2	2	2	2
	NULL	NULL	null	2	2	2	4
	NULL	NULL	null	2	2	3	-3
	NULL	NULL	null	2	2	5	-5
	NULL	NULL	null	2	2	5	-5
	NULL	NULL	null	2	2	NULL	0
	NULL	NULL	null	2	2	NULL	NULL
	NULL	NULL	null	2	4	0	NULL
	NULL	NULL	null	2	4	1	-1
	NULL	NULL	null	2	4	2	2
	NULL	NULL	null	2	4	2	4
	NULL	NULL	null	2	4	3	-3
	NULL	NULL	null	2	4	5	-5
	NULL	NULL	null	2	4	5	-5
	NULL	NULL	null	2	4	NULL	0
	NULL	NULL	null	2	4	NULL	NULL
	NULL	NULL	null	3	-3	0	NULL
	NULL	NULL	null	3	-3	1	-1
	NULL	NULL	null	3	-3	2	2
	NULL	NULL	null	3	-3	2	4
	NULL	NULL	null	3	-3	3	-3
	NULL	NULL	null	3	-3	5	-5
	NULL	NULL	null	3	-3	5	-5
	NULL	NULL	null	3	-3	NULL	0
	NULL	NULL	null	3	-3	NULL	NULL
	NULL	NULL	null	5	-5	0	NULL
	NULL	NULL	null	5	-5	0	NULL
	NULL	NULL	null	5	-5	1	-1
	NULL	NULL	null	5	-5	1	-1
	NULL	NULL	null	5	-5	2	2
	NULL	NULL	null	5	-5	2	2
	NULL	NULL	null	5	-5	2	4
	NULL	NULL	null	5	-5	2	4
	NULL	NULL	null	5	-5	3	-3
	NULL	NULL	null	5	-5	3	-3
	NULL	NULL	null	5	-5	5	-5
	NULL	NULL	null	5	-5	5	-5
	NULL	NULL	null	5	-5	5	-5
	NULL	NULL	null	5	-5	5	-5
	NULL	NULL	null	5	-5	NULL	0
	NULL	NULL	null	5	-5	NULL	0
	NULL	NULL	null	5	-5	NULL	NULL
	NULL	NULL	null	5	-5	NULL	NULL
	NULL	NULL	null	NULL	0	0	NULL
	NULL	NULL	null	NULL	0	1	-1
	NULL	NULL	null	NULL	0	2	2
	NULL	NULL	null	NULL	0	2	4
	NULL	NULL	null	NULL	0	3	-3
	NULL	NULL	null	NULL	0	5	-5
	NULL	NULL	null	NULL	0	5	-5
	NULL	NULL	null	NULL	0	NULL	0
	NULL	NULL	null	NULL	0	NULL	NULL
	NULL	NULL	null	NULL	NULL	0	NULL
	NULL	NULL	null	NULL	NULL	1	-1
	NULL	NULL	null	NULL	NULL	2	2
	NULL	NULL	null	NULL	NULL	2	4
	NULL	NULL	null	NULL	NULL	3	-3
	NULL	NULL	null	NULL	NULL	5	-5
	NULL	NULL	null	NULL	NULL	5	-5
	NULL	NULL	null	NULL	NULL	NULL	0
	NULL	NULL	null	NULL	NULL	NULL	NULL


-- !query 37
SELECT udf('') AS `xxx`, udf(i) AS i, udf(j), udf(t) AS t, udf(k)
  FROM J1_TBL INNER JOIN J2_TBL USING (i)
-- !query 37 schema
struct<xxx:string,i:int,CAST(udf(cast(j as string)) AS INT):int,t:string,CAST(udf(cast(k as string)) AS INT):int>
-- !query 37 output
	0	NULL	zero	NULL
	1	4	one	-1
	2	3	two	2
	2	3	two	4
	3	2	three	-3
	5	0	five	-5
	5	0	five	-5


-- !query 38
SELECT udf(udf('')) AS `xxx`, udf(i), udf(j) AS j, udf(t), udf(k) AS k
  FROM J1_TBL JOIN J2_TBL USING (i)
-- !query 38 schema
struct<xxx:string,CAST(udf(cast(i as string)) AS INT):int,j:int,CAST(udf(cast(t as string)) AS STRING):string,k:int>
-- !query 38 output
	0	NULL	zero	NULL
	1	4	one	-1
	2	3	two	2
	2	3	two	4
	3	2	three	-3
	5	0	five	-5
	5	0	five	-5


-- !query 39
SELECT udf('') AS `xxx`, *
  FROM J1_TBL t1 (a, b, c) JOIN J2_TBL t2 (a, d) USING (a)
  ORDER BY udf(udf(a)), udf(d)
-- !query 39 schema
struct<xxx:string,a:int,b:int,c:string,d:int>
-- !query 39 output
	0	NULL	zero	NULL
	1	4	one	-1
	2	3	two	2
	2	3	two	4
	3	2	three	-3
	5	0	five	-5
	5	0	five	-5


-- !query 40
SELECT udf(udf('')) AS `xxx`, udf(i), udf(j), udf(t), udf(k)
  FROM J1_TBL NATURAL JOIN J2_TBL
-- !query 40 schema
struct<xxx:string,CAST(udf(cast(i as string)) AS INT):int,CAST(udf(cast(j as string)) AS INT):int,CAST(udf(cast(t as string)) AS STRING):string,CAST(udf(cast(k as string)) AS INT):int>
-- !query 40 output
	0	NULL	zero	NULL
	1	4	one	-1
	2	3	two	2
	2	3	two	4
	3	2	three	-3
	5	0	five	-5
	5	0	five	-5


-- !query 41
SELECT udf('') AS `xxx`, udf(udf(udf(a))) AS a, udf(b), udf(c), udf(d)
  FROM J1_TBL t1 (a, b, c) NATURAL JOIN J2_TBL t2 (a, d)
-- !query 41 schema
struct<xxx:string,a:int,CAST(udf(cast(b as string)) AS INT):int,CAST(udf(cast(c as string)) AS STRING):string,CAST(udf(cast(d as string)) AS INT):int>
-- !query 41 output
	0	NULL	zero	NULL
	1	4	one	-1
	2	3	two	2
	2	3	two	4
	3	2	three	-3
	5	0	five	-5
	5	0	five	-5


-- !query 42
SELECT udf('') AS `xxx`, udf(udf(a)), udf(udf(b)), udf(udf(c)) AS c, udf(udf(udf(d))) AS d
  FROM J1_TBL t1 (a, b, c) NATURAL JOIN J2_TBL t2 (d, a)
-- !query 42 schema
struct<xxx:string,CAST(udf(cast(cast(udf(cast(a as string)) as int) as string)) AS INT):int,CAST(udf(cast(cast(udf(cast(b as string)) as int) as string)) AS INT):int,c:string,d:int>
-- !query 42 output
	0	NULL	zero	NULL
	2	3	two	2
	4	1	four	2


-- !query 43
SELECT udf('') AS `xxx`, udf(J1_TBL.i), udf(udf(J1_TBL.j)), udf(J1_TBL.t), udf(J2_TBL.i), udf(J2_TBL.k)
  FROM J1_TBL JOIN J2_TBL ON (udf(J1_TBL.i) = J2_TBL.i)
-- !query 43 schema
struct<xxx:string,CAST(udf(cast(i as string)) AS INT):int,CAST(udf(cast(cast(udf(cast(j as string)) as int) as string)) AS INT):int,CAST(udf(cast(t as string)) AS STRING):string,CAST(udf(cast(i as string)) AS INT):int,CAST(udf(cast(k as string)) AS INT):int>
-- !query 43 output
	0	NULL	zero	0	NULL
	1	4	one	1	-1
	2	3	two	2	2
	2	3	two	2	4
	3	2	three	3	-3
	5	0	five	5	-5
	5	0	five	5	-5


-- !query 44
SELECT udf('') AS `xxx`, udf(udf(J1_TBL.i)), udf(udf(J1_TBL.j)), udf(udf(J1_TBL.t)), J2_TBL.i, J2_TBL.k
  FROM J1_TBL JOIN J2_TBL ON (J1_TBL.i = udf(J2_TBL.k))
-- !query 44 schema
struct<xxx:string,CAST(udf(cast(cast(udf(cast(i as string)) as int) as string)) AS INT):int,CAST(udf(cast(cast(udf(cast(j as string)) as int) as string)) AS INT):int,CAST(udf(cast(cast(udf(cast(t as string)) as string) as string)) AS STRING):string,i:int,k:int>
-- !query 44 output
	0	NULL	zero	NULL	0
	2	3	two	2	2
	4	1	four	2	4


-- !query 45
SELECT udf('') AS `xxx`, udf(J1_TBL.i), udf(J1_TBL.j), udf(J1_TBL.t), udf(J2_TBL.i), udf(J2_TBL.k)
  FROM J1_TBL JOIN J2_TBL ON (udf(J1_TBL.i) <= udf(udf(J2_TBL.k)))
-- !query 45 schema
struct<xxx:string,CAST(udf(cast(i as string)) AS INT):int,CAST(udf(cast(j as string)) AS INT):int,CAST(udf(cast(t as string)) AS STRING):string,CAST(udf(cast(i as string)) AS INT):int,CAST(udf(cast(k as string)) AS INT):int>
-- !query 45 output
	0	NULL	zero	2	2
	0	NULL	zero	2	4
	0	NULL	zero	NULL	0
	1	4	one	2	2
	1	4	one	2	4
	2	3	two	2	2
	2	3	two	2	4
	3	2	three	2	4
	4	1	four	2	4


-- !query 46
SELECT udf(udf('')) AS `xxx`, udf(i), udf(j), udf(t), udf(k)
  FROM J1_TBL LEFT OUTER JOIN J2_TBL USING (i)
  ORDER BY udf(udf(i)), udf(k), udf(t)
-- !query 46 schema
struct<xxx:string,CAST(udf(cast(i as string)) AS INT):int,CAST(udf(cast(j as string)) AS INT):int,CAST(udf(cast(t as string)) AS STRING):string,CAST(udf(cast(k as string)) AS INT):int>
-- !query 46 output
	NULL	NULL	null	NULL
	NULL	0	zero	NULL
	0	NULL	zero	NULL
	1	4	one	-1
	2	3	two	2
	2	3	two	4
	3	2	three	-3
	4	1	four	NULL
	5	0	five	-5
	5	0	five	-5
	6	6	six	NULL
	7	7	seven	NULL
	8	8	eight	NULL


-- !query 47
SELECT udf('') AS `xxx`, udf(i), udf(j), udf(t), udf(k)
  FROM J1_TBL LEFT JOIN J2_TBL USING (i)
  ORDER BY udf(i), udf(udf(k)), udf(t)
-- !query 47 schema
struct<xxx:string,CAST(udf(cast(i as string)) AS INT):int,CAST(udf(cast(j as string)) AS INT):int,CAST(udf(cast(t as string)) AS STRING):string,CAST(udf(cast(k as string)) AS INT):int>
-- !query 47 output
	NULL	NULL	null	NULL
	NULL	0	zero	NULL
	0	NULL	zero	NULL
	1	4	one	-1
	2	3	two	2
	2	3	two	4
	3	2	three	-3
	4	1	four	NULL
	5	0	five	-5
	5	0	five	-5
	6	6	six	NULL
	7	7	seven	NULL
	8	8	eight	NULL


-- !query 48
SELECT udf('') AS `xxx`, udf(udf(i)), udf(j), udf(t), udf(k)
  FROM J1_TBL RIGHT OUTER JOIN J2_TBL USING (i)
-- !query 48 schema
struct<xxx:string,CAST(udf(cast(cast(udf(cast(i as string)) as int) as string)) AS INT):int,CAST(udf(cast(j as string)) AS INT):int,CAST(udf(cast(t as string)) AS STRING):string,CAST(udf(cast(k as string)) AS INT):int>
-- !query 48 output
	0	NULL	zero	NULL
	1	4	one	-1
	2	3	two	2
	2	3	two	4
	3	2	three	-3
	5	0	five	-5
	5	0	five	-5
	NULL	NULL	NULL	0
	NULL	NULL	NULL	NULL


-- !query 49
SELECT udf('') AS `xxx`, udf(i), udf(udf(j)), udf(t), udf(k)
  FROM J1_TBL RIGHT JOIN J2_TBL USING (i)
-- !query 49 schema
struct<xxx:string,CAST(udf(cast(i as string)) AS INT):int,CAST(udf(cast(cast(udf(cast(j as string)) as int) as string)) AS INT):int,CAST(udf(cast(t as string)) AS STRING):string,CAST(udf(cast(k as string)) AS INT):int>
-- !query 49 output
	0	NULL	zero	NULL
	1	4	one	-1
	2	3	two	2
	2	3	two	4
	3	2	three	-3
	5	0	five	-5
	5	0	five	-5
	NULL	NULL	NULL	0
	NULL	NULL	NULL	NULL


-- !query 50
SELECT udf('') AS `xxx`, udf(i), udf(j), udf(udf(t)), udf(k)
  FROM J1_TBL FULL OUTER JOIN J2_TBL USING (i)
  ORDER BY udf(udf(i)), udf(k), udf(t)
-- !query 50 schema
struct<xxx:string,CAST(udf(cast(i as string)) AS INT):int,CAST(udf(cast(j as string)) AS INT):int,CAST(udf(cast(cast(udf(cast(t as string)) as string) as string)) AS STRING):string,CAST(udf(cast(k as string)) AS INT):int>
-- !query 50 output
	NULL	NULL	NULL	NULL
	NULL	NULL	null	NULL
	NULL	0	zero	NULL
	NULL	NULL	NULL	0
	0	NULL	zero	NULL
	1	4	one	-1
	2	3	two	2
	2	3	two	4
	3	2	three	-3
	4	1	four	NULL
	5	0	five	-5
	5	0	five	-5
	6	6	six	NULL
	7	7	seven	NULL
	8	8	eight	NULL


-- !query 51
SELECT udf('') AS `xxx`, udf(i), udf(j), t, udf(udf(k))
  FROM J1_TBL FULL JOIN J2_TBL USING (i)
  ORDER BY udf(udf(i)), udf(k), udf(udf(t))
-- !query 51 schema
struct<xxx:string,CAST(udf(cast(i as string)) AS INT):int,CAST(udf(cast(j as string)) AS INT):int,t:string,CAST(udf(cast(cast(udf(cast(k as string)) as int) as string)) AS INT):int>
-- !query 51 output
	NULL	NULL	NULL	NULL
	NULL	NULL	null	NULL
	NULL	0	zero	NULL
	NULL	NULL	NULL	0
	0	NULL	zero	NULL
	1	4	one	-1
	2	3	two	2
	2	3	two	4
	3	2	three	-3
	4	1	four	NULL
	5	0	five	-5
	5	0	five	-5
	6	6	six	NULL
	7	7	seven	NULL
	8	8	eight	NULL


-- !query 52
SELECT udf('') AS `xxx`, udf(i), udf(j), udf(t), udf(udf(k))
  FROM J1_TBL LEFT JOIN J2_TBL USING (i) WHERE (udf(k) = 1)
-- !query 52 schema
struct<xxx:string,CAST(udf(cast(i as string)) AS INT):int,CAST(udf(cast(j as string)) AS INT):int,CAST(udf(cast(t as string)) AS STRING):string,CAST(udf(cast(cast(udf(cast(k as string)) as int) as string)) AS INT):int>
-- !query 52 output



-- !query 53
SELECT udf('') AS `xxx`, udf(i), udf(j), udf(t), udf(k)
  FROM J1_TBL LEFT JOIN J2_TBL USING (i) WHERE (udf(udf(i)) = udf(1))
-- !query 53 schema
struct<xxx:string,CAST(udf(cast(i as string)) AS INT):int,CAST(udf(cast(j as string)) AS INT):int,CAST(udf(cast(t as string)) AS STRING):string,CAST(udf(cast(k as string)) AS INT):int>
-- !query 53 output
	1	4	one	-1


-- !query 54
CREATE TABLE t1 (name STRING, n INTEGER) USING parquet
-- !query 54 schema
struct<>
-- !query 54 output



-- !query 55
CREATE TABLE t2 (name STRING, n INTEGER) USING parquet
-- !query 55 schema
struct<>
-- !query 55 output



-- !query 56
CREATE TABLE t3 (name STRING, n INTEGER) USING parquet
-- !query 56 schema
struct<>
-- !query 56 output



-- !query 57
INSERT INTO t1 VALUES ( 'bb', 11 )
-- !query 57 schema
struct<>
-- !query 57 output



-- !query 58
INSERT INTO t2 VALUES ( 'bb', 12 )
-- !query 58 schema
struct<>
-- !query 58 output



-- !query 59
INSERT INTO t2 VALUES ( 'cc', 22 )
-- !query 59 schema
struct<>
-- !query 59 output



-- !query 60
INSERT INTO t2 VALUES ( 'ee', 42 )
-- !query 60 schema
struct<>
-- !query 60 output



-- !query 61
INSERT INTO t3 VALUES ( 'bb', 13 )
-- !query 61 schema
struct<>
-- !query 61 output



-- !query 62
INSERT INTO t3 VALUES ( 'cc', 23 )
-- !query 62 schema
struct<>
-- !query 62 output



-- !query 63
INSERT INTO t3 VALUES ( 'dd', 33 )
-- !query 63 schema
struct<>
-- !query 63 output



-- !query 64
SELECT * FROM t1 FULL JOIN t2 USING (name) FULL JOIN t3 USING (name)
-- !query 64 schema
struct<name:string,n:int,n:int,n:int>
-- !query 64 output
bb	11	12	13
cc	NULL	22	23
dd	NULL	NULL	33
ee	NULL	42	NULL


-- !query 65
SELECT * FROM
(SELECT udf(name) as name, t2.n FROM t2) as s2
INNER JOIN
(SELECT udf(udf(name)) as name, t3.n FROM t3) s3
USING (name)
-- !query 65 schema
struct<name:string,n:int,n:int>
-- !query 65 output
bb	12	13
cc	22	23


-- !query 66
SELECT * FROM
(SELECT udf(udf(name)) as name, t2.n FROM t2) as s2
LEFT JOIN
(SELECT udf(name) as name, t3.n FROM t3) s3
USING (name)
-- !query 66 schema
struct<name:string,n:int,n:int>
-- !query 66 output
bb	12	13
cc	22	23
ee	42	NULL


-- !query 67
SELECT udf(name), udf(udf(s2.n)), udf(s3.n) FROM
(SELECT * FROM t2) as s2
FULL JOIN
(SELECT * FROM t3) s3
USING (name)
-- !query 67 schema
struct<CAST(udf(cast(name as string)) AS STRING):string,CAST(udf(cast(cast(udf(cast(n as string)) as int) as string)) AS INT):int,CAST(udf(cast(n as string)) AS INT):int>
-- !query 67 output
bb	12	13
cc	22	23
dd	NULL	33
ee	42	NULL


-- !query 68
SELECT * FROM
(SELECT udf(udf(name)) as name, udf(n) as s2_n, udf(2) as s2_2 FROM t2) as s2
NATURAL INNER JOIN
(SELECT udf(name) as name, udf(udf(n)) as s3_n, udf(3) as s3_2 FROM t3) s3
-- !query 68 schema
struct<name:string,s2_n:int,s2_2:int,s3_n:int,s3_2:int>
-- !query 68 output
bb	12	2	13	3
cc	22	2	23	3


-- !query 69
SELECT * FROM
(SELECT udf(name) as name, udf(udf(n)) as s2_n, 2 as s2_2 FROM t2) as s2
NATURAL LEFT JOIN
(SELECT udf(udf(name)) as name, udf(n) as s3_n, 3 as s3_2 FROM t3) s3
-- !query 69 schema
struct<name:string,s2_n:int,s2_2:int,s3_n:int,s3_2:int>
-- !query 69 output
bb	12	2	13	3
cc	22	2	23	3
ee	42	2	NULL	NULL


-- !query 70
SELECT * FROM
(SELECT udf(name) as name, udf(n) as s2_n, 2 as s2_2 FROM t2) as s2
NATURAL FULL JOIN
(SELECT udf(udf(name)) as name, udf(udf(n)) as s3_n, 3 as s3_2 FROM t3) s3
-- !query 70 schema
struct<name:string,s2_n:int,s2_2:int,s3_n:int,s3_2:int>
-- !query 70 output
bb	12	2	13	3
cc	22	2	23	3
dd	NULL	NULL	33	3
ee	42	2	NULL	NULL


-- !query 71
SELECT * FROM
(SELECT udf(udf(name)) as name, udf(n) as s1_n, 1 as s1_1 FROM t1) as s1
NATURAL INNER JOIN
(SELECT udf(name) as name, udf(n) as s2_n, 2 as s2_2 FROM t2) as s2
NATURAL INNER JOIN
(SELECT udf(udf(udf(name))) as name, udf(n) as s3_n, 3 as s3_2 FROM t3) s3
-- !query 71 schema
struct<name:string,s1_n:int,s1_1:int,s2_n:int,s2_2:int,s3_n:int,s3_2:int>
-- !query 71 output
bb	11	1	12	2	13	3


-- !query 72
SELECT * FROM
(SELECT udf(name) as name, udf(n) as s1_n, udf(udf(1)) as s1_1 FROM t1) as s1
NATURAL FULL JOIN
(SELECT udf(name) as name, udf(udf(n)) as s2_n, udf(2) as s2_2 FROM t2) as s2
NATURAL FULL JOIN
(SELECT udf(udf(name)) as name, udf(n) as s3_n, udf(3) as s3_2 FROM t3) s3
-- !query 72 schema
struct<name:string,s1_n:int,s1_1:int,s2_n:int,s2_2:int,s3_n:int,s3_2:int>
-- !query 72 output
bb	11	1	12	2	13	3
cc	NULL	NULL	22	2	23	3
dd	NULL	NULL	NULL	NULL	33	3
ee	NULL	NULL	42	2	NULL	NULL


-- !query 73
SELECT name, udf(udf(s1_n)), udf(s2_n), udf(s3_n) FROM
(SELECT name, udf(udf(n)) as s1_n FROM t1) as s1
NATURAL FULL JOIN
  (SELECT * FROM
    (SELECT name, udf(n) as s2_n FROM t2) as s2
    NATURAL FULL JOIN
    (SELECT name, udf(udf(n)) as s3_n FROM t3) as s3
  ) ss2
-- !query 73 schema
struct<name:string,CAST(udf(cast(cast(udf(cast(s1_n as string)) as int) as string)) AS INT):int,CAST(udf(cast(s2_n as string)) AS INT):int,CAST(udf(cast(s3_n as string)) AS INT):int>
-- !query 73 output
bb	11	12	13
cc	NULL	22	23
dd	NULL	NULL	33
ee	NULL	42	NULL


-- !query 74
SELECT * FROM
(SELECT name, n as s1_n FROM t1) as s1
NATURAL FULL JOIN
  (SELECT * FROM
    (SELECT name, udf(udf(n)) as s2_n, 2 as s2_2 FROM t2) as s2
    NATURAL FULL JOIN
    (SELECT name, udf(n) as s3_n FROM t3) as s3
  ) ss2
-- !query 74 schema
struct<name:string,s1_n:int,s2_n:int,s2_2:int,s3_n:int>
-- !query 74 output
bb	11	12	2	13
cc	NULL	22	2	23
dd	NULL	NULL	NULL	33
ee	NULL	42	2	NULL


-- !query 75
SELECT s1.name, udf(s1_n), s2.name, udf(udf(s2_n)) FROM
  (SELECT name, udf(n) as s1_n FROM t1) as s1
FULL JOIN
  (SELECT name, 2 as s2_n FROM t2) as s2
ON (udf(udf(s1_n)) = udf(s2_n))
-- !query 75 schema
struct<name:string,CAST(udf(cast(s1_n as string)) AS INT):int,name:string,CAST(udf(cast(cast(udf(cast(s2_n as string)) as int) as string)) AS INT):int>
-- !query 75 output
NULL	NULL	bb	2
NULL	NULL	cc	2
NULL	NULL	ee	2
bb	11	NULL	NULL


-- !query 76
create or replace temporary view x as select * from
  (values (1,11), (2,22), (3,null), (4,44), (5,null))
  as v(x1, x2)
-- !query 76 schema
struct<>
-- !query 76 output



-- !query 77
create or replace temporary view y as select * from
  (values (1,111), (2,222), (3,333), (4,null))
  as v(y1, y2)
-- !query 77 schema
struct<>
-- !query 77 output



-- !query 78
select udf(udf(x1)), udf(x2) from x
-- !query 78 schema
struct<CAST(udf(cast(cast(udf(cast(x1 as string)) as int) as string)) AS INT):int,CAST(udf(cast(x2 as string)) AS INT):int>
-- !query 78 output
1	11
2	22
3	NULL
4	44
5	NULL


-- !query 79
select udf(y1), udf(udf(y2)) from y
-- !query 79 schema
struct<CAST(udf(cast(y1 as string)) AS INT):int,CAST(udf(cast(cast(udf(cast(y2 as string)) as int) as string)) AS INT):int>
-- !query 79 output
1	111
2	222
3	333
4	NULL


-- !query 80
select * from x left join y on (udf(x1) = udf(udf(y1)) and udf(x2) is not null)
-- !query 80 schema
struct<x1:int,x2:int,y1:int,y2:int>
-- !query 80 output
1	11	1	111
2	22	2	222
3	NULL	NULL	NULL
4	44	4	NULL
5	NULL	NULL	NULL


-- !query 81
select * from x left join y on (udf(udf(x1)) = udf(y1) and udf(y2) is not null)
-- !query 81 schema
struct<x1:int,x2:int,y1:int,y2:int>
-- !query 81 output
1	11	1	111
2	22	2	222
3	NULL	3	333
4	44	NULL	NULL
5	NULL	NULL	NULL


-- !query 82
select * from (x left join y on (udf(x1) = udf(udf(y1)))) left join x xx(xx1,xx2)
on (udf(udf(x1)) = udf(xx1))
-- !query 82 schema
struct<x1:int,x2:int,y1:int,y2:int,xx1:int,xx2:int>
-- !query 82 output
1	11	1	111	1	11
2	22	2	222	2	22
3	NULL	3	333	3	NULL
4	44	4	NULL	4	44
5	NULL	NULL	NULL	5	NULL


-- !query 83
select * from (x left join y on (udf(x1) = udf(y1))) left join x xx(xx1,xx2)
on (udf(x1) = xx1 and udf(x2) is not null)
-- !query 83 schema
struct<x1:int,x2:int,y1:int,y2:int,xx1:int,xx2:int>
-- !query 83 output
1	11	1	111	1	11
2	22	2	222	2	22
3	NULL	3	333	NULL	NULL
4	44	4	NULL	4	44
5	NULL	NULL	NULL	NULL	NULL


-- !query 84
select * from (x left join y on (x1 = udf(y1))) left join x xx(xx1,xx2)
on (udf(x1) = udf(udf(xx1)) and udf(y2) is not null)
-- !query 84 schema
struct<x1:int,x2:int,y1:int,y2:int,xx1:int,xx2:int>
-- !query 84 output
1	11	1	111	1	11
2	22	2	222	2	22
3	NULL	3	333	3	NULL
4	44	4	NULL	NULL	NULL
5	NULL	NULL	NULL	NULL	NULL


-- !query 85
select * from (x left join y on (udf(x1) = y1)) left join x xx(xx1,xx2)
on (udf(udf(x1)) = udf(xx1) and udf(udf(xx2)) is not null)
-- !query 85 schema
struct<x1:int,x2:int,y1:int,y2:int,xx1:int,xx2:int>
-- !query 85 output
1	11	1	111	1	11
2	22	2	222	2	22
3	NULL	3	333	NULL	NULL
4	44	4	NULL	4	44
5	NULL	NULL	NULL	NULL	NULL


-- !query 86
select * from (x left join y on (udf(udf(x1)) = udf(udf(y1)))) left join x xx(xx1,xx2)
on (udf(x1) = udf(xx1)) where (udf(x2) is not null)
-- !query 86 schema
struct<x1:int,x2:int,y1:int,y2:int,xx1:int,xx2:int>
-- !query 86 output
1	11	1	111	1	11
2	22	2	222	2	22
4	44	4	NULL	4	44


-- !query 87
select * from (x left join y on (udf(x1) = udf(y1))) left join x xx(xx1,xx2)
on (udf(x1) = xx1) where (udf(y2) is not null)
-- !query 87 schema
struct<x1:int,x2:int,y1:int,y2:int,xx1:int,xx2:int>
-- !query 87 output
1	11	1	111	1	11
2	22	2	222	2	22
3	NULL	3	333	3	NULL


-- !query 88
select * from (x left join y on (udf(x1) = udf(y1))) left join x xx(xx1,xx2)
on (x1 = udf(xx1)) where (xx2 is not null)
-- !query 88 schema
struct<x1:int,x2:int,y1:int,y2:int,xx1:int,xx2:int>
-- !query 88 output
1	11	1	111	1	11
2	22	2	222	2	22
4	44	4	NULL	4	44


-- !query 89
select udf(udf(count(*))) from tenk1 a where udf(udf(unique1)) in
  (select udf(unique1) from tenk1 b join tenk1 c using (unique1)
   where udf(udf(b.unique2)) = udf(42))
-- !query 89 schema
struct<CAST(udf(cast(cast(udf(cast(count(1) as string)) as bigint) as string)) AS BIGINT):bigint>
-- !query 89 output
1


-- !query 90
select udf(count(*)) from tenk1 x where
  udf(x.unique1) in (select udf(a.f1) from int4_tbl a,float8_tbl b where udf(udf(a.f1))=b.f1) and
  udf(x.unique1) = 0 and
  udf(x.unique1) in (select aa.f1 from int4_tbl aa,float8_tbl bb where aa.f1=udf(udf(bb.f1)))
-- !query 90 schema
struct<CAST(udf(cast(count(1) as string)) AS BIGINT):bigint>
-- !query 90 output
1


-- !query 91
select udf(udf(count(*))) from tenk1 x where
  udf(x.unique1) in (select udf(a.f1) from int4_tbl a,float8_tbl b where udf(udf(a.f1))=b.f1) and
  udf(x.unique1) = 0 and
  udf(udf(x.unique1)) in (select udf(aa.f1) from int4_tbl aa,float8_tbl bb where udf(aa.f1)=udf(udf(bb.f1)))
-- !query 91 schema
struct<CAST(udf(cast(cast(udf(cast(count(1) as string)) as bigint) as string)) AS BIGINT):bigint>
-- !query 91 output
1


-- !query 92
select * from int8_tbl i1 left join (int8_tbl i2 join
  (select udf(123) as x) ss on udf(udf(i2.q1)) = udf(x)) on udf(udf(i1.q2)) = udf(udf(i2.q2))
order by udf(udf(1)), 2
-- !query 92 schema
struct<q1:bigint,q2:bigint,q1:bigint,q2:bigint,x:int>
-- !query 92 output
4567890123456789	-4567890123456789	NULL	NULL	NULL
4567890123456789	123	NULL	NULL	NULL
123	456	123	456	123
123	4567890123456789	123	4567890123456789	123
4567890123456789	4567890123456789	123	4567890123456789	123


-- !query 93
select udf(count(*))
from
  (select udf(t3.tenthous) as x1, udf(coalesce(udf(t1.stringu1), udf(t2.stringu1))) as x2
   from tenk1 t1
   left join tenk1 t2 on udf(t1.unique1) = udf(t2.unique1)
   join tenk1 t3 on t1.unique2 = udf(t3.unique2)) ss,
  tenk1 t4,
  tenk1 t5
where udf(t4.thousand) = udf(t5.unique1) and udf(udf(ss.x1)) = t4.tenthous and udf(ss.x2) = udf(udf(t5.stringu1))
-- !query 93 schema
struct<CAST(udf(cast(count(1) as string)) AS BIGINT):bigint>
-- !query 93 output
1000


-- !query 94
select udf(a.f1), udf(b.f1), udf(t.thousand), udf(t.tenthous) from
  tenk1 t,
  (select udf(udf(sum(udf(f1))+1)) as f1 from int4_tbl i4a) a,
  (select udf(sum(udf(f1))) as f1 from int4_tbl i4b) b
where b.f1 = udf(t.thousand) and udf(a.f1) = udf(b.f1) and udf((udf(a.f1)+udf(b.f1)+999)) = udf(udf(t.tenthous))
-- !query 94 schema
struct<CAST(udf(cast(f1 as string)) AS BIGINT):bigint,CAST(udf(cast(f1 as string)) AS BIGINT):bigint,CAST(udf(cast(thousand as string)) AS INT):int,CAST(udf(cast(tenthous as string)) AS INT):int>
-- !query 94 output



-- !query 95
select * from
  j1_tbl full join
  (select * from j2_tbl order by udf(udf(j2_tbl.i)) desc, udf(j2_tbl.k) asc) j2_tbl
  on udf(j1_tbl.i) = udf(j2_tbl.i) and udf(j1_tbl.i) = udf(j2_tbl.k)
-- !query 95 schema
struct<i:int,j:int,t:string,i:int,k:int>
-- !query 95 output
0	NULL	zero	NULL	NULL
1	4	one	NULL	NULL
2	3	two	2	2
3	2	three	NULL	NULL
4	1	four	NULL	NULL
5	0	five	NULL	NULL
6	6	six	NULL	NULL
7	7	seven	NULL	NULL
8	8	eight	NULL	NULL
NULL	0	zero	NULL	NULL
NULL	NULL	NULL	0	NULL
NULL	NULL	NULL	1	-1
NULL	NULL	NULL	2	4
NULL	NULL	NULL	3	-3
NULL	NULL	NULL	5	-5
NULL	NULL	NULL	5	-5
NULL	NULL	NULL	NULL	0
NULL	NULL	NULL	NULL	NULL
NULL	NULL	null	NULL	NULL


-- !query 96
select udf(count(*)) from
  (select * from tenk1 x order by udf(x.thousand), udf(udf(x.twothousand)), x.fivethous) x
  left join
  (select * from tenk1 y order by udf(y.unique2)) y
  on udf(x.thousand) = y.unique2 and x.twothousand = udf(y.hundred) and x.fivethous = y.unique2
-- !query 96 schema
struct<CAST(udf(cast(count(1) as string)) AS BIGINT):bigint>
-- !query 96 output
10000


-- !query 97
DROP TABLE t1
-- !query 97 schema
struct<>
-- !query 97 output



-- !query 98
DROP TABLE t2
-- !query 98 schema
struct<>
-- !query 98 output



-- !query 99
DROP TABLE t3
-- !query 99 schema
struct<>
-- !query 99 output



-- !query 100
DROP TABLE J1_TBL
-- !query 100 schema
struct<>
-- !query 100 output



-- !query 101
DROP TABLE J2_TBL
-- !query 101 schema
struct<>
-- !query 101 output



-- !query 102
create or replace temporary view tt1 as select * from
  (values (1, 11), (2, NULL))
  as v(tt1_id, joincol)
-- !query 102 schema
struct<>
-- !query 102 output



-- !query 103
create or replace temporary view tt2 as select * from
  (values (21, 11), (22, 11))
  as v(tt2_id, joincol)
-- !query 103 schema
struct<>
-- !query 103 output



-- !query 104
select tt1.*, tt2.* from tt1 left join tt2 on udf(udf(tt1.joincol)) = udf(tt2.joincol)
-- !query 104 schema
struct<tt1_id:int,joincol:int,tt2_id:int,joincol:int>
-- !query 104 output
1	11	21	11
1	11	22	11
2	NULL	NULL	NULL


-- !query 105
select tt1.*, tt2.* from tt2 right join tt1 on udf(udf(tt1.joincol)) = udf(udf(tt2.joincol))
-- !query 105 schema
struct<tt1_id:int,joincol:int,tt2_id:int,joincol:int>
-- !query 105 output
1	11	21	11
1	11	22	11
2	NULL	NULL	NULL


-- !query 106
select udf(count(*)) from tenk1 a, tenk1 b
  where udf(a.hundred) = b.thousand and udf(udf((b.fivethous % 10)) < 10)
-- !query 106 schema
struct<CAST(udf(cast(count(1) as string)) AS BIGINT):bigint>
-- !query 106 output
100000


-- !query 107
DROP TABLE IF EXISTS tt3
-- !query 107 schema
struct<>
-- !query 107 output



-- !query 108
CREATE TABLE tt3(f1 int, f2 string) USING parquet
-- !query 108 schema
struct<>
-- !query 108 output



-- !query 109
INSERT INTO tt3 SELECT x.id, repeat('xyzzy', 100) FROM range(1,10001) x
-- !query 109 schema
struct<>
-- !query 109 output



-- !query 110
DROP TABLE IF EXISTS tt4
-- !query 110 schema
struct<>
-- !query 110 output



-- !query 111
CREATE TABLE tt4(f1 int) USING parquet
-- !query 111 schema
struct<>
-- !query 111 output



-- !query 112
INSERT INTO tt4 VALUES (0),(1),(9999)
-- !query 112 schema
struct<>
-- !query 112 output



-- !query 113
SELECT udf(udf(a.f1)) as f1
FROM tt4 a
LEFT JOIN (
        SELECT b.f1
        FROM tt3 b LEFT JOIN tt3 c ON udf(b.f1) = udf(c.f1)
        WHERE udf(c.f1) IS NULL
) AS d ON udf(a.f1) = d.f1
WHERE udf(udf(d.f1)) IS NULL
-- !query 113 schema
struct<f1:int>
-- !query 113 output
0
1
9999


-- !query 114
create or replace temporary view tt5 as select * from
  (values (1, 10), (1, 11))
  as v(f1, f2)
-- !query 114 schema
struct<>
-- !query 114 output



-- !query 115
create or replace temporary view tt6 as select * from
  (values (1, 9), (1, 2), (2, 9))
  as v(f1, f2)
-- !query 115 schema
struct<>
-- !query 115 output



-- !query 116
select * from tt5,tt6 where udf(tt5.f1) = udf(tt6.f1) and udf(tt5.f1) = udf(udf(tt5.f2) - udf(tt6.f2))
-- !query 116 schema
struct<f1:int,f2:int,f1:int,f2:int>
-- !query 116 output
1	10	1	9


-- !query 117
create or replace temporary view xx as select * from
  (values (1), (2), (3))
  as v(pkxx)
-- !query 117 schema
struct<>
-- !query 117 output



-- !query 118
create or replace temporary view yy as select * from
  (values (101, 1), (201, 2), (301, NULL))
  as v(pkyy, pkxx)
-- !query 118 schema
struct<>
-- !query 118 output



-- !query 119
select udf(udf(yy.pkyy)) as yy_pkyy, udf(yy.pkxx) as yy_pkxx, udf(yya.pkyy) as yya_pkyy,
       udf(xxa.pkxx) as xxa_pkxx, udf(xxb.pkxx) as xxb_pkxx
from yy
     left join (SELECT * FROM yy where pkyy = 101) as yya ON udf(yy.pkyy) = udf(yya.pkyy)
     left join xx xxa on udf(yya.pkxx) = udf(udf(xxa.pkxx))
     left join xx xxb on udf(udf(coalesce (xxa.pkxx, 1))) = udf(xxb.pkxx)
-- !query 119 schema
struct<yy_pkyy:int,yy_pkxx:int,yya_pkyy:int,xxa_pkxx:int,xxb_pkxx:int>
-- !query 119 output
101	1	101	1	1
201	2	NULL	NULL	1
301	NULL	NULL	NULL	1


-- !query 120
create or replace temporary view zt1 as select * from
  (values (53))
  as v(f1)
-- !query 120 schema
struct<>
-- !query 120 output



-- !query 121
create or replace temporary view zt2 as select * from
  (values (53))
  as v(f2)
-- !query 121 schema
struct<>
-- !query 121 output



-- !query 122
create or replace temporary view zt3(f3 int) using parquet
-- !query 122 schema
struct<>
-- !query 122 output



-- !query 123
select * from
  zt2 left join zt3 on (udf(f2) = udf(udf(f3)))
      left join zt1 on (udf(udf(f3)) = udf(f1))
where udf(f2) = 53
-- !query 123 schema
struct<f2:int,f3:int,f1:int>
-- !query 123 output
53	NULL	NULL


-- !query 124
create temp view zv1 as select *,'dummy' AS junk from zt1
-- !query 124 schema
struct<>
-- !query 124 output



-- !query 125
select * from
  zt2 left join zt3 on (f2 = udf(f3))
      left join zv1 on (udf(f3) = f1)
where udf(udf(f2)) = 53
-- !query 125 schema
struct<f2:int,f3:int,f1:int,junk:string>
-- !query 125 output
53	NULL	NULL	NULL


-- !query 126
select udf(a.unique2), udf(a.ten), udf(b.tenthous), udf(b.unique2), udf(b.hundred)
from tenk1 a left join tenk1 b on a.unique2 = udf(b.tenthous)
where udf(a.unique1) = 42 and
      ((udf(b.unique2) is null and udf(a.ten) = 2) or udf(udf(b.hundred)) = udf(udf(3)))
-- !query 126 schema
struct<CAST(udf(cast(unique2 as string)) AS INT):int,CAST(udf(cast(ten as string)) AS INT):int,CAST(udf(cast(tenthous as string)) AS INT):int,CAST(udf(cast(unique2 as string)) AS INT):int,CAST(udf(cast(hundred as string)) AS INT):int>
-- !query 126 output



-- !query 127
create or replace temporary view a (i integer) using parquet
-- !query 127 schema
struct<>
-- !query 127 output



-- !query 128
create or replace temporary view b (x integer, y integer) using parquet
-- !query 128 schema
struct<>
-- !query 128 output



-- !query 129
select * from a left join b on udf(i) = x and i = udf(y) and udf(x) = udf(i)
-- !query 129 schema
struct<i:int,x:int,y:int>
-- !query 129 output



-- !query 130
select udf(t1.q2), udf(count(t2.*))
from int8_tbl t1 left join int8_tbl t2 on (udf(udf(t1.q2)) = t2.q1)
group by udf(t1.q2) order by 1
-- !query 130 schema
struct<CAST(udf(cast(q2 as string)) AS BIGINT):bigint,CAST(udf(cast(count(q1, q2) as string)) AS BIGINT):bigint>
-- !query 130 output
-4567890123456789	0
123	2
456	0
4567890123456789	6


-- !query 131
select udf(udf(t1.q2)), udf(count(t2.*))
from int8_tbl t1 left join (select * from int8_tbl) t2 on (udf(udf(t1.q2)) = udf(t2.q1))
group by udf(udf(t1.q2)) order by 1
-- !query 131 schema
struct<CAST(udf(cast(cast(udf(cast(q2 as string)) as bigint) as string)) AS BIGINT):bigint,CAST(udf(cast(count(q1, q2) as string)) AS BIGINT):bigint>
-- !query 131 output
-4567890123456789	0
123	2
456	0
4567890123456789	6


-- !query 132
select udf(t1.q2) as q2, udf(udf(count(t2.*)))
from int8_tbl t1 left join
  (select udf(q1) as q1, case when q2=1 then 1 else q2 end as q2 from int8_tbl) t2
  on (udf(t1.q2) = udf(t2.q1))
group by t1.q2 order by 1
-- !query 132 schema
struct<q2:bigint,CAST(udf(cast(cast(udf(cast(count(q1, q2) as string)) as bigint) as string)) AS BIGINT):bigint>
-- !query 132 output
-4567890123456789	0
123	2
456	0
4567890123456789	6


-- !query 133
create or replace temporary view a as select * from
  (values ('p'), ('q'))
  as v(code)
-- !query 133 schema
struct<>
-- !query 133 output



-- !query 134
create or replace temporary view b as select * from
  (values ('p', 1), ('p', 2))
  as v(a, num)
-- !query 134 schema
struct<>
-- !query 134 output



-- !query 135
create or replace temporary view c as select * from
  (values ('A', 'p'), ('B', 'q'), ('C', null))
  as v(name, a)
-- !query 135 schema
struct<>
-- !query 135 output



-- !query 136
select udf(c.name), udf(ss.code), udf(ss.b_cnt), udf(ss.const)
from c left join
  (select a.code, coalesce(b_grp.cnt, 0) as b_cnt, -1 as const
   from a left join
     (select udf(count(1)) as cnt, b.a as a from b group by b.a) as b_grp
     on udf(a.code) = udf(udf(b_grp.a))
  ) as ss
  on (udf(udf(c.a)) = udf(ss.code))
order by c.name
-- !query 136 schema
struct<CAST(udf(cast(name as string)) AS STRING):string,CAST(udf(cast(code as string)) AS STRING):string,CAST(udf(cast(b_cnt as string)) AS BIGINT):bigint,CAST(udf(cast(const as string)) AS INT):int>
-- !query 136 output
A	p	2	-1
B	q	0	-1
C	NULL	NULL	NULL


-- !query 137
SELECT * FROM
( SELECT 1 as key1 ) sub1
LEFT JOIN
( SELECT sub3.key3, sub4.value2, COALESCE(sub4.value2, 66) as value3 FROM
    ( SELECT 1 as key3 ) sub3
    LEFT JOIN
    ( SELECT udf(sub5.key5) as key5, udf(udf(COALESCE(sub6.value1, 1))) as value2 FROM
        ( SELECT 1 as key5 ) sub5
        LEFT JOIN
        ( SELECT 2 as key6, 42 as value1 ) sub6
        ON sub5.key5 = udf(sub6.key6)
    ) sub4
    ON udf(sub4.key5) = sub3.key3
) sub2
ON udf(udf(sub1.key1)) = udf(udf(sub2.key3))
-- !query 137 schema
struct<key1:int,key3:int,value2:int,value3:int>
-- !query 137 output
1	1	1	1


-- !query 138
SELECT * FROM
( SELECT 1 as key1 ) sub1
LEFT JOIN
( SELECT udf(sub3.key3) as key3, udf(value2), udf(COALESCE(value2, 66)) as value3 FROM
    ( SELECT 1 as key3 ) sub3
    LEFT JOIN
    ( SELECT sub5.key5, COALESCE(sub6.value1, 1) as value2 FROM
        ( SELECT 1 as key5 ) sub5
        LEFT JOIN
        ( SELECT 2 as key6, 42 as value1 ) sub6
        ON udf(udf(sub5.key5)) = sub6.key6
    ) sub4
    ON sub4.key5 = sub3.key3
) sub2
ON sub1.key1 = udf(udf(sub2.key3))
-- !query 138 schema
struct<key1:int,key3:int,CAST(udf(cast(value2 as string)) AS INT):int,value3:int>
-- !query 138 output
1	1	1	1


-- !query 139
SELECT udf(qq), udf(udf(unique1))
  FROM
  ( SELECT udf(COALESCE(q1, 0)) AS qq FROM int8_tbl a ) AS ss1
  FULL OUTER JOIN
  ( SELECT udf(udf(COALESCE(q2, -1))) AS qq FROM int8_tbl b ) AS ss2
  USING (qq)
  INNER JOIN tenk1 c ON udf(qq) = udf(unique2)
-- !query 139 schema
struct<CAST(udf(cast(qq as string)) AS BIGINT):bigint,CAST(udf(cast(cast(udf(cast(unique1 as string)) as int) as string)) AS INT):int>
-- !query 139 output
123	4596
123	4596
456	7318


-- !query 140
create or replace temporary view nt1 as select * from
  (values(1,true,true), (2,true,false), (3,false,false))
  as v(id, a1, a2)
-- !query 140 schema
struct<>
-- !query 140 output



-- !query 141
create or replace temporary view nt2 as select * from
  (values(1,1,true,true), (2,2,true,false), (3,3,false,false))
  as v(id, nt1_id, b1, b2)
-- !query 141 schema
struct<>
-- !query 141 output



-- !query 142
create or replace temporary view nt3 as select * from
  (values(1,1,true), (2,2,false), (3,3,true))
  as v(id, nt2_id, c1)
-- !query 142 schema
struct<>
-- !query 142 output



-- !query 143
select udf(nt3.id)
from nt3 as nt3
  left join
    (select nt2.*, (udf(nt2.b1) and udf(ss1.a3)) AS b3
     from nt2 as nt2
       left join
         (select nt1.*, (udf(nt1.id) is not null) as a3 from nt1) as ss1
         on ss1.id = udf(udf(nt2.nt1_id))
    ) as ss2
    on udf(ss2.id) = nt3.nt2_id
where udf(nt3.id) = 1 and udf(ss2.b3)
-- !query 143 schema
struct<CAST(udf(cast(id as string)) AS INT):int>
-- !query 143 output
1


-- !query 144
select * from int4_tbl a full join int4_tbl b on true
-- !query 144 schema
struct<f1:int,f1:int>
-- !query 144 output
-123456	-123456
-123456	-2147483647
-123456	0
-123456	123456
-123456	2147483647
-2147483647	-123456
-2147483647	-2147483647
-2147483647	0
-2147483647	123456
-2147483647	2147483647
0	-123456
0	-2147483647
0	0
0	123456
0	2147483647
123456	-123456
123456	-2147483647
123456	0
123456	123456
123456	2147483647
2147483647	-123456
2147483647	-2147483647
2147483647	0
2147483647	123456
2147483647	2147483647


-- !query 145
select * from int4_tbl a full join int4_tbl b on false
-- !query 145 schema
struct<f1:int,f1:int>
-- !query 145 output
-123456	NULL
-2147483647	NULL
0	NULL
123456	NULL
2147483647	NULL
NULL	-123456
NULL	-2147483647
NULL	0
NULL	123456
NULL	2147483647


-- !query 146
select udf(count(*)) from
  tenk1 a join tenk1 b on udf(a.unique1) = udf(b.unique2)
  left join tenk1 c on udf(a.unique2) = udf(b.unique1) and udf(c.thousand) = udf(udf(a.thousand))
  join int4_tbl on udf(b.thousand) = f1
-- !query 146 schema
struct<CAST(udf(cast(count(1) as string)) AS BIGINT):bigint>
-- !query 146 output
10


-- !query 147
select udf(b.unique1) from
  tenk1 a join tenk1 b on udf(a.unique1) = udf(b.unique2)
  left join tenk1 c on udf(b.unique1) = 42 and c.thousand = udf(a.thousand)
  join int4_tbl i1 on udf(b.thousand) = udf(udf(f1))
  right join int4_tbl i2 on udf(udf(i2.f1)) = udf(b.tenthous)
  order by udf(1)
-- !query 147 schema
struct<CAST(udf(cast(unique1 as string)) AS INT):int>
-- !query 147 output
NULL
NULL
0
NULL
NULL


-- !query 148
select * from
(
  select udf(unique1), udf(q1), udf(udf(coalesce(unique1, -1)) + udf(q1)) as fault
  from int8_tbl left join tenk1 on (udf(q2) = udf(unique2))
) ss
where udf(fault) = udf(122)
order by udf(fault)
-- !query 148 schema
struct<CAST(udf(cast(unique1 as string)) AS INT):int,CAST(udf(cast(q1 as string)) AS BIGINT):bigint,fault:bigint>
-- !query 148 output
NULL	123	122


-- !query 149
select udf(q1), udf(unique2), udf(thousand), udf(hundred)
  from int8_tbl a left join tenk1 b on udf(q1) = udf(unique2)
  where udf(coalesce(thousand,123)) = udf(q1) and udf(q1) = udf(udf(coalesce(hundred,123)))
-- !query 149 schema
struct<CAST(udf(cast(q1 as string)) AS BIGINT):bigint,CAST(udf(cast(unique2 as string)) AS INT):int,CAST(udf(cast(thousand as string)) AS INT):int,CAST(udf(cast(hundred as string)) AS INT):int>
-- !query 149 output



-- !query 150
select udf(f1), udf(unique2), case when udf(udf(unique2)) is null then udf(f1) else 0 end
  from int4_tbl a left join tenk1 b on udf(f1) = udf(udf(unique2))
  where (case when udf(unique2) is null then udf(f1) else 0 end) = 0
-- !query 150 schema
struct<CAST(udf(cast(f1 as string)) AS INT):int,CAST(udf(cast(unique2 as string)) AS INT):int,CASE WHEN (CAST(udf(cast(cast(udf(cast(unique2 as string)) as int) as string)) AS INT) IS NULL) THEN CAST(udf(cast(f1 as string)) AS INT) ELSE 0 END:int>
-- !query 150 output
0	0	0


-- !query 151
select udf(a.unique1), udf(b.unique1), udf(c.unique1), udf(coalesce(b.twothousand, a.twothousand))
  from tenk1 a left join tenk1 b on udf(b.thousand) = a.unique1                       left join tenk1 c on udf(c.unique2) = udf(coalesce(b.twothousand, a.twothousand))
  where a.unique2 < udf(10) and udf(udf(coalesce(b.twothousand, a.twothousand))) = udf(44)
-- !query 151 schema
struct<CAST(udf(cast(unique1 as string)) AS INT):int,CAST(udf(cast(unique1 as string)) AS INT):int,CAST(udf(cast(unique1 as string)) AS INT):int,CAST(udf(cast(coalesce(twothousand, twothousand) as string)) AS INT):int>
-- !query 151 output



-- !query 152
select * from
  text_tbl t1
  inner join int8_tbl i8
  on udf(i8.q2) = udf(udf(456))
  right join text_tbl t2
  on udf(t1.f1) = udf(udf('doh!'))
  left join int4_tbl i4
  on udf(udf(i8.q1)) = i4.f1
-- !query 152 schema
struct<f1:string,q1:bigint,q2:bigint,f1:string,f1:int>
-- !query 152 output
doh!	123	456	doh!	NULL
doh!	123	456	hi de ho neighbor	NULL


-- !query 153
select * from
  (select udf(udf(1)) as id) as xx
  left join
    (tenk1 as a1 full join (select udf(1) as id) as yy on (udf(a1.unique1) = udf(yy.id)))
  on (xx.id = udf(udf(coalesce(yy.id))))
-- !query 153 schema
struct<id:int,unique1:int,unique2:int,two:int,four:int,ten:int,twenty:int,hundred:int,thousand:int,twothousand:int,fivethous:int,tenthous:int,odd:int,even:int,stringu1:string,stringu2:string,string4:string,id:int>
-- !query 153 output
1	1	2838	1	1	1	1	1	1	1	1	1	2	3	BAAAAA	EFEAAA	OOOOxx	1


-- !query 154
select udf(a.q2), udf(b.q1)
  from int8_tbl a left join int8_tbl b on udf(a.q2) = coalesce(b.q1, 1)
  where udf(udf(coalesce(b.q1, 1)) > 0)
-- !query 154 schema
struct<CAST(udf(cast(q2 as string)) AS BIGINT):bigint,CAST(udf(cast(q1 as string)) AS BIGINT):bigint>
-- !query 154 output
-4567890123456789	NULL
123	123
123	123
456	NULL
4567890123456789	4567890123456789
4567890123456789	4567890123456789
4567890123456789	4567890123456789
4567890123456789	4567890123456789
4567890123456789	4567890123456789
4567890123456789	4567890123456789


-- !query 155
create or replace temporary view parent as select * from
  (values (1, 10), (2, 20), (3, 30))
  as v(k, pd)
-- !query 155 schema
struct<>
-- !query 155 output



-- !query 156
create or replace temporary view child as select * from
  (values (1, 100), (4, 400))
  as v(k, cd)
-- !query 156 schema
struct<>
-- !query 156 output



-- !query 157
select p.* from parent p left join child c on (udf(p.k) = udf(c.k))
-- !query 157 schema
struct<k:int,pd:int>
-- !query 157 output
1	10
2	20
3	30


-- !query 158
select p.*, linked from parent p
  left join (select c.*, udf(udf(true)) as linked from child c) as ss
  on (udf(p.k) = udf(udf(ss.k)))
-- !query 158 schema
struct<k:int,pd:int,linked:boolean>
-- !query 158 output
1	10	true
2	20	NULL
3	30	NULL


-- !query 159
select p.* from
  parent p left join child c on (udf(p.k) = c.k)
  where p.k = udf(1) and udf(udf(p.k)) = udf(udf(2))
-- !query 159 schema
struct<k:int,pd:int>
-- !query 159 output



-- !query 160
select p.* from
  (parent p left join child c on (udf(p.k) = c.k)) join parent x on p.k = udf(x.k)
  where udf(p.k) = udf(1) and udf(udf(p.k)) = udf(udf(2))
-- !query 160 schema
struct<k:int,pd:int>
-- !query 160 output



-- !query 161
create or replace temporary view a as select * from
  (values (0), (1))
  as v(id)
-- !query 161 schema
struct<>
-- !query 161 output



-- !query 162
create or replace temporary view b as select * from
  (values (0, 0), (1, NULL))
  as v(id, a_id)
-- !query 162 schema
struct<>
-- !query 162 output



-- !query 163
SELECT * FROM b LEFT JOIN a ON (udf(b.a_id) = udf(a.id)) WHERE (udf(udf(a.id)) IS NULL OR udf(a.id) > 0)
-- !query 163 schema
struct<id:int,a_id:int,id:int>
-- !query 163 output
1	NULL	NULL


-- !query 164
SELECT b.* FROM b LEFT JOIN a ON (udf(b.a_id) = udf(a.id)) WHERE (udf(a.id) IS NULL OR udf(udf(a.id)) > 0)
-- !query 164 schema
struct<id:int,a_id:int>
-- !query 164 output
1	NULL


-- !query 165
create or replace temporary view innertab as select * from
  (values (123L, 42L))
  as v(id, dat1)
-- !query 165 schema
struct<>
-- !query 165 output



-- !query 166
SELECT * FROM
    (SELECT udf(1) AS x) ss1
  LEFT JOIN
    (SELECT udf(q1), udf(q2), udf(COALESCE(dat1, q1)) AS y
     FROM int8_tbl LEFT JOIN innertab ON udf(udf(q2)) = id) ss2
  ON true
-- !query 166 schema
struct<x:int,CAST(udf(cast(q1 as string)) AS BIGINT):bigint,CAST(udf(cast(q2 as string)) AS BIGINT):bigint,y:bigint>
-- !query 166 output
1	123	456	123
1	123	4567890123456789	123
1	4567890123456789	-4567890123456789	4567890123456789
1	4567890123456789	123	42
1	4567890123456789	4567890123456789	4567890123456789


-- !query 167
select * from
  int8_tbl x join (int4_tbl x cross join int4_tbl y) j on udf(q1) = udf(f1)
-- !query 167 schema
struct<>
-- !query 167 output
org.apache.spark.sql.AnalysisException
Reference 'f1' is ambiguous, could be: j.f1, j.f1.; line 2 pos 72


-- !query 168
select * from
  int8_tbl x join (int4_tbl x cross join int4_tbl y) j on udf(q1) = udf(y.f1)
-- !query 168 schema
struct<>
-- !query 168 output
org.apache.spark.sql.AnalysisException
cannot resolve '`y.f1`' given input columns: [j.f1, j.f1, x.q1, x.q2]; line 2 pos 72


-- !query 169
select * from
  int8_tbl x join (int4_tbl x cross join int4_tbl y(ff)) j on udf(q1) = udf(udf(f1))
-- !query 169 schema
struct<q1:bigint,q2:bigint,f1:int,ff:int>
-- !query 169 output



-- !query 170
select udf(t1.uunique1) from
  tenk1 t1 join tenk2 t2 on t1.two = udf(t2.two)
-- !query 170 schema
struct<>
-- !query 170 output
org.apache.spark.sql.AnalysisException
cannot resolve '`t1.uunique1`' given input columns: [t1.even, t2.even, t1.fivethous, t2.fivethous, t1.four, t2.four, t1.hundred, t2.hundred, t1.odd, t2.odd, t1.string4, t2.string4, t1.stringu1, t2.stringu1, t1.stringu2, t2.stringu2, t1.ten, t2.ten, t1.tenthous, t2.tenthous, t1.thousand, t2.thousand, t1.twenty, t2.twenty, t1.two, t2.two, t1.twothousand, t2.twothousand, t1.unique1, t2.unique1, t1.unique2, t2.unique2]; line 1 pos 11


-- !query 171
select udf(udf(t2.uunique1)) from
  tenk1 t1 join tenk2 t2 on udf(t1.two) = t2.two
-- !query 171 schema
struct<>
-- !query 171 output
org.apache.spark.sql.AnalysisException
cannot resolve '`t2.uunique1`' given input columns: [t1.even, t2.even, t1.fivethous, t2.fivethous, t1.four, t2.four, t1.hundred, t2.hundred, t1.odd, t2.odd, t1.string4, t2.string4, t1.stringu1, t2.stringu1, t1.stringu2, t2.stringu2, t1.ten, t2.ten, t1.tenthous, t2.tenthous, t1.thousand, t2.thousand, t1.twenty, t2.twenty, t1.two, t2.two, t1.twothousand, t2.twothousand, t1.unique1, t2.unique1, t1.unique2, t2.unique2]; line 1 pos 15


-- !query 172
select udf(uunique1) from
  tenk1 t1 join tenk2 t2 on udf(t1.two) = udf(t2.two)
-- !query 172 schema
struct<>
-- !query 172 output
org.apache.spark.sql.AnalysisException
cannot resolve '`uunique1`' given input columns: [t1.even, t2.even, t1.fivethous, t2.fivethous, t1.four, t2.four, t1.hundred, t2.hundred, t1.odd, t2.odd, t1.string4, t2.string4, t1.stringu1, t2.stringu1, t1.stringu2, t2.stringu2, t1.ten, t2.ten, t1.tenthous, t2.tenthous, t1.thousand, t2.thousand, t1.twenty, t2.twenty, t1.two, t2.two, t1.twothousand, t2.twothousand, t1.unique1, t2.unique1, t1.unique2, t2.unique2]; line 1 pos 11


-- !query 173
select udf(udf(f1,g)) from int4_tbl a, (select udf(udf(f1)) as g) ss
-- !query 173 schema
struct<>
-- !query 173 output
org.apache.spark.sql.AnalysisException
cannot resolve '`f1`' given input columns: []; line 1 pos 55


-- !query 174
select udf(f1,g) from int4_tbl a, (select a.f1 as g) ss
-- !query 174 schema
struct<>
-- !query 174 output
org.apache.spark.sql.AnalysisException
cannot resolve '`a.f1`' given input columns: []; line 1 pos 42


-- !query 175
select udf(udf(f1,g)) from int4_tbl a cross join (select udf(f1) as g) ss
-- !query 175 schema
struct<>
-- !query 175 output
org.apache.spark.sql.AnalysisException
cannot resolve '`f1`' given input columns: []; line 1 pos 61


-- !query 176
select udf(f1,g) from int4_tbl a cross join (select udf(udf(a.f1)) as g) ss
-- !query 176 schema
struct<>
-- !query 176 output
org.apache.spark.sql.AnalysisException
cannot resolve '`a.f1`' given input columns: []; line 1 pos 60


-- !query 177
CREATE TABLE j1 (id1 int, id2 int) USING parquet
-- !query 177 schema
struct<>
-- !query 177 output



-- !query 178
CREATE TABLE j2 (id1 int, id2 int) USING parquet
-- !query 178 schema
struct<>
-- !query 178 output



-- !query 179
INSERT INTO j1 values(1,1),(1,2)
-- !query 179 schema
struct<>
-- !query 179 output



-- !query 180
INSERT INTO j2 values(1,1)
-- !query 180 schema
struct<>
-- !query 180 output



-- !query 181
INSERT INTO j2 values(1,2)
-- !query 181 schema
struct<>
-- !query 181 output



-- !query 182
select * from j1
inner join j2 on udf(j1.id1) = udf(j2.id1) and udf(udf(j1.id2)) = udf(j2.id2)
where udf(j1.id1) % 1000 = 1 and udf(udf(j2.id1) % 1000) = 1
-- !query 182 schema
struct<id1:int,id2:int,id1:int,id2:int>
-- !query 182 output
1	1	1	1
1	2	1	2


-- !query 183
drop table j1
-- !query 183 schema
struct<>
-- !query 183 output



-- !query 184
drop table j2
-- !query 184 schema
struct<>
-- !query 184 output

